{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\n// Ã¯mport package react\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport { toast } from 'react-toast';\nimport { AUTH } from '../../JS/actionsTypes/actionAuth'; // import google & github login \n\nimport { GoogleLogin } from 'react-google-login';\nimport LoginGithub from 'react-login-github'; // import axios\n\nimport axios from 'axios';\nimport { authenticate, isAuth } from '../../helpers/auth';\nimport { LOGOUT } from '../../JS/actionsTypes/actionAuth'; // import CSS\n\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport './Navbar.css';\nimport useStyles from './styles'; // import logo\n\nimport logo from \"../../Assets/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [user, setUser] = useState({});\n  console.log(user);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles(); // send google token\n\n  const sendGoogleToken = tokenId => {\n    axios.post(`http://localhost:7000/api/googlelogin`, {\n      idToken: tokenId\n    }).then(res => {\n      console.log(res.data);\n      history.push('/project');\n    }).catch(error => {\n      console.log('GOOGLE SIGNIN ERROR', error.response);\n    });\n  };\n\n  const informParent = response => {\n    authenticate(response, () => {\n      isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/private');\n    });\n  }; // send github token\n\n\n  const sendGithubToken = (client_id, code, client_secret) => {\n    axios.post(`http://localhost:7000/api/githublogin`, {\n      client_id,\n      code,\n      client_secret\n    }).then(res => {\n      console.log(res.data); //informParent(res);\n\n      history.push('/project');\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  }; // handle google\n\n\n  const responseGoogle = response => {\n    const result = response === null || response === void 0 ? void 0 : response.profileObj;\n    const token = response === null || response === void 0 ? void 0 : response.tokenId;\n    console.log(response);\n    sendGoogleToken(response.tokenId);\n    dispatch({\n      type: AUTH,\n      data: {\n        result,\n        token\n      }\n    });\n  };\n\n  const [data, setData] = useState({\n    errorMessage: \"\",\n    isLoading: false\n  });\n\n  const githubSuccess = async response => {\n    console.log(response);\n    const result = response === null || response === void 0 ? void 0 : response.profileObj;\n    const token = response === null || response === void 0 ? void 0 : response.access_token;\n\n    try {\n      sendGithubToken(response.client_secret, response.code, response.client_id); //dispatch({ type: AUTH, data: { result, token } });\n\n      dispatch({\n        type: \"AUTH\",\n        payload: {\n          user: data\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const githubFailure = response => console.error(response);\n\n  const logout = () => {\n    localStorage.clear();\n    history.push('/');\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          className: classes.toolbar,\n          children: (user === null || user === void 0 ? void 0 : user.result) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profile,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.purple,\n              alt: user === null || user === void 0 ? void 0 : user.result.name,\n              src: user === null || user === void 0 ? void 0 : user.result.imageUrl,\n              children: user === null || user === void 0 ? void 0 : user.result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.userName,\n              variant: \"h6\",\n              children: user === null || user === void 0 ? void 0 : user.result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: classes.logout,\n              color: \"secondary\",\n              onClick: logout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/project\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: /*#__PURE__*/_jsxDEV(LoginGithub, {\n              clientId: `e8db77544d2e4e9ab741`,\n              buttonText: \"Login with Github\",\n              onSuccess: githubSuccess,\n              onFailure: githubFailure,\n              className: \"icon-github\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"/7s2FVgqeJMoh6HaA3KyMmu6ebw=\", false, function () {\n  return [useDispatch, useLocation, useHistory, useStyles];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Components/Navbar/Navbar.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","decode","toast","AUTH","GoogleLogin","LoginGithub","axios","authenticate","isAuth","LOGOUT","AppBar","Typography","Toolbar","Avatar","Button","useStyles","logo","Navbar","user","setUser","console","log","dispatch","location","history","classes","sendGoogleToken","tokenId","post","idToken","then","res","data","push","catch","error","response","informParent","role","sendGithubToken","client_id","code","client_secret","responseGoogle","result","profileObj","token","type","setData","errorMessage","isLoading","githubSuccess","access_token","payload","githubFailure","logout","localStorage","clear","decodedToken","exp","Date","getTime","JSON","parse","getItem","toolbar","profile","purple","name","imageUrl","userName"],"mappings":"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","sourcesContent":["// Ã¯mport package react\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport { toast } from 'react-toast'\r\nimport { AUTH } from '../../JS/actionsTypes/actionAuth';\r\n\r\n\r\n\r\n\r\n\r\n// import google & github login \r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LoginGithub from 'react-login-github';\r\n\r\n\r\n// import axios\r\nimport axios from 'axios';\r\n\r\nimport { authenticate, isAuth } from '../../helpers/auth';\r\nimport {LOGOUT} from '../../JS/actionsTypes/actionAuth';\r\n\r\n\r\n// import CSS\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core'\r\nimport './Navbar.css'\r\nimport useStyles from './styles';\r\n\r\n// import logo\r\nimport logo from \"../../Assets/logo.png\"\r\n\r\nconst Navbar =  ()  => {\r\n\r\n const [user, setUser] = useState({});\r\n console.log(user)\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  // send google token\r\n  const sendGoogleToken = tokenId => {\r\n    axios\r\n      .post(`http://localhost:7000/api/googlelogin`, {\r\n        idToken: tokenId\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        history.push('/project')\r\n      })\r\n      .catch(error => {\r\n        console.log('GOOGLE SIGNIN ERROR', error.response);\r\n      });\r\n  };\r\n  const informParent = response => {\r\n    authenticate(response, () => {\r\n      isAuth() && isAuth().role === 'admin'\r\n        ? history.push('/admin')\r\n        : history.push('/private');\r\n    });\r\n  };\r\n\r\n// send github token\r\nconst sendGithubToken = (client_id, code, client_secret) => {\r\n  axios\r\n    .post(`http://localhost:7000/api/githublogin`, {\r\n      client_id, \r\n      code,\r\n      client_secret\r\n      \r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //informParent(res);\r\n      history.push('/project')\r\n    })\r\n    .catch(error => {\r\n      console.log('GITHUB SIGNIN ERROR', error.response);\r\n    });\r\n};\r\n      // handle google\r\n      const responseGoogle = response => {\r\n        const result = response?.profileObj;\r\n    const token = response?.tokenId;\r\n        console.log(response);\r\n        sendGoogleToken(response.tokenId);\r\n        dispatch({ type: AUTH, data: { result, token } });\r\n\r\n      };\r\n    \r\n      const [data, setData] = useState({ errorMessage: \"\", isLoading: false });\r\n\r\n\r\n      const githubSuccess = async(response) => {\r\n        console.log(response);\r\n        const result = response?.profileObj\r\n        const token = response?.access_token;\r\n      try    {\r\n        sendGithubToken(response.client_secret, response.code, response.client_id)\r\n        //dispatch({ type: AUTH, data: { result, token } });\r\n        dispatch({\r\n          type: \"AUTH\",\r\n          payload: { user: data }\r\n        });\r\n      }\r\n       \r\n      catch (error) {\r\n        console.log(error);\r\n      }\r\n      \r\n      }\r\n      const githubFailure = response =>\r\n       console.error(response);\r\n\r\n       \r\n  const logout = () => {\r\n    localStorage.clear();\r\n\r\n    history.push('/');\r\n\r\n    setUser(null);\r\n  };\r\n\r\n\r\n       useEffect(() => {\r\n        const token = user?.token;\r\n    \r\n        if (token) {\r\n          const decodedToken = decode(token);\r\n    \r\n          if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n    \r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n      }, [location]);\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n      <AppBar color=\"white\">\r\n {/*logo */}\r\n  <img  src={logo} alt=\"logo\" className=\"logo\"></img>\r\n\r\n {/*button signin  logout */}\r\n <div className='buttons'>\r\n\r\n <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/project\" variant=\"contained\" color=\"primary\">\r\n        <LoginGithub\r\n                  clientId={`e8db77544d2e4e9ab741`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n                \r\n           ></LoginGithub>\r\n\r\n  </Button>\r\n\r\n     )}\r\n      </Toolbar>\r\n \r\n       \r\n        </div> \r\n       \r\n          \r\n\r\n\r\n        </AppBar> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}