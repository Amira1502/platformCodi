{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROJECTS_LOAD, GET_PROJECTS_SUCCESS, GET_PROJECTS_FAIL, GET_PROJECT, TOGGLE_TRUE, TOGGLE_FALSE } from '../ActionsTypes/actionProject'; // get projects\n\nexport const getProjects = () => async dispatch => {\n  dispatch({\n    type: GET_PROJECTS_LOAD\n  });\n\n  try {\n    const res = await axios.get(\"/api/project/\");\n    dispatch({\n      type: GET_PROJECTS_SUCCESS,\n      payload: res.data.listProjects\n    });\n  } catch (error) {\n    dispatch({\n      type: GET_PROJECTS_FAIL,\n      payload: error\n    });\n    console.log(error);\n  }\n}; // get one project by id\n\nexport const getProject = projectId => async dispatch => {\n  try {\n    const res = await axios.get(`/api/project/${projectId}`);\n    dispatch({\n      type: GET_PROJECT,\n      payload: res.data.projectToFind\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; // delete project\n\nexport const deleteProject = id => async dispatch => {\n  try {\n    await axios.delete(`/api/project/${id}`);\n    dispatch(getProjects());\n  } catch (error) {\n    dispatch({\n      type: GET_PROJECTS_FAIL,\n      payload: error.response.data\n    });\n  }\n}; // add new project\n\nexport const addProject = newProject => async dispatch => {\n  try {\n    await axios.post(\"/api/project/\", newProject);\n    dispatch(getProjects());\n  } catch (error) {\n    console.log(error);\n  }\n}; // edit a project\n\nexport const editProject = (projectId, newProject) => async dispatch => {\n  try {\n    await axios.put(`/api/project/${projectId}`, newProject);\n    dispatch(getProjects());\n  } catch (error) {\n    console.log(error);\n  }\n}; // Toggle true\n\nexport const toggleTrue = () => {\n  return {\n    type: TOGGLE_TRUE\n  };\n}; // Toggle false\n\nexport const toggleFalse = () => {\n  return {\n    type: TOGGLE_FALSE\n  };\n};","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/JS/actions/actionProject.js"],"names":["axios","GET_PROJECTS_LOAD","GET_PROJECTS_SUCCESS","GET_PROJECTS_FAIL","GET_PROJECT","TOGGLE_TRUE","TOGGLE_FALSE","getProjects","dispatch","type","res","get","payload","data","listProjects","error","console","log","getProject","projectId","projectToFind","deleteProject","id","delete","response","addProject","newProject","post","editProject","put","toggleTrue","toggleFalse"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,iBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,EAIIC,WAJJ,EAKIC,WALJ,EAMIC,YANJ,QAOO,+BAPP,C,CAUA;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACjDA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAER;AAAR,GAAD,CAAR;;AACA,MAAI;AACA,UAAMS,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,eAAV,CAAlB;AACAH,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,oBADD;AAELU,MAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASC;AAFb,KAAD,CAAR;AAIH,GAND,CAME,OAAOC,KAAP,EAAc;AACZP,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN,iBADD;AAELS,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAfM,C,CAgBP;;AACA,OAAO,MAAMG,UAAU,GAAIC,SAAD,IAAe,MAAOX,QAAP,IAAoB;AACzD,MAAI;AACA,UAAME,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,gBAAeQ,SAAU,EAApC,CAAlB;AACAX,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEL,WAAR;AAAqBQ,MAAAA,OAAO,EAAEF,GAAG,CAACG,IAAJ,CAASO;AAAvC,KAAD,CAAR;AACH,GAHD,CAGE,OAAOL,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAPM,C,CASP;;AACA,OAAO,MAAMM,aAAa,GAAIC,EAAD,IAAO,MAAMd,QAAN,IAAiB;AACjD,MAAG;AACH,UAAMR,KAAK,CAACuB,MAAN,CAAc,gBAAeD,EAAG,EAAhC,CAAN;AACAd,IAAAA,QAAQ,CAAED,WAAW,EAAb,CAAR;AAEC,GAJD,CAKA,OAAOQ,KAAP,EAAc;AACVP,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAGN,iBAAR;AAA2BS,MAAAA,OAAO,EAAEG,KAAK,CAACS,QAAN,CAAeX;AAAnD,KAAD,CAAR;AACH;AACA,CATE,C,CAWP;;AACA,OAAO,MAAMY,UAAU,GAAKC,UAAF,IAAiB,MAAOlB,QAAP,IAAoB;AAC3D,MAAI;AACA,UAAMR,KAAK,CAAC2B,IAAN,CAAW,eAAX,EAA4BD,UAA5B,CAAN;AACAlB,IAAAA,QAAQ,CAACD,WAAW,EAAZ,CAAR;AACH,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAPM,C,CASP;;AACA,OAAO,MAAMa,WAAW,GAAE,CAACT,SAAD,EAAYO,UAAZ,KAA2B,MAAOlB,QAAP,IAAoB;AACrE,MAAI;AACA,UAAMR,KAAK,CAAC6B,GAAN,CAAW,gBAAeV,SAAU,EAApC,EAAuCO,UAAvC,CAAN;AACAlB,IAAAA,QAAQ,CAACD,WAAW,EAAZ,CAAR;AACH,GAHD,CAGE,OAAOQ,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAPM,C,CASP;;AACA,OAAO,MAAMe,UAAU,GAAG,MAAM;AAC5B,SAAO;AACHrB,IAAAA,IAAI,EAAEJ;AADH,GAAP;AAGH,CAJM,C,CAMP;;AACA,OAAO,MAAM0B,WAAW,GAAG,MAAM;AAC7B,SAAO;AACHtB,IAAAA,IAAI,EAAEH;AADH,GAAP;AAGH,CAJM","sourcesContent":["import axios from 'axios'\r\n\r\nimport {\r\n    GET_PROJECTS_LOAD, \r\n    GET_PROJECTS_SUCCESS,\r\n    GET_PROJECTS_FAIL,\r\n    GET_PROJECT,\r\n    TOGGLE_TRUE,\r\n    TOGGLE_FALSE\r\n} from '../ActionsTypes/actionProject'\r\n\r\n\r\n// get projects\r\nexport const getProjects = () => async (dispatch) => {\r\n    dispatch({ type: GET_PROJECTS_LOAD })\r\n    try {\r\n        const res = await axios.get(\"/api/project/\")\r\n        dispatch({\r\n            type: GET_PROJECTS_SUCCESS,\r\n            payload: res.data.listProjects\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_PROJECTS_FAIL,\r\n            payload: error\r\n        })\r\n        console.log(error)\r\n    }\r\n}\r\n// get one project by id\r\nexport const getProject = (projectId) => async (dispatch) => {\r\n    try {\r\n        const res = await axios.get(`/api/project/${projectId}`)\r\n        dispatch({ type: GET_PROJECT, payload: res.data.projectToFind})\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// delete project\r\nexport const deleteProject = (id) =>async(dispatch)=>{\r\n    try{\r\n    await axios.delete(`/api/project/${id}`)\r\n    dispatch( getProjects())  \r\n    \r\n    }\r\n    catch (error) {\r\n        dispatch({type:  GET_PROJECTS_FAIL, payload: error.response.data })\r\n    }\r\n    }\r\n\r\n// add new project\r\nexport const addProject = ( newProject) => async (dispatch) => {\r\n    try {\r\n        await axios.post(\"/api/project/\", newProject)\r\n        dispatch(getProjects())\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// edit a project\r\nexport const editProject= (projectId, newProject) => async (dispatch) => {\r\n    try {\r\n        await axios.put(`/api/project/${projectId}`, newProject)\r\n        dispatch(getProjects())\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n// Toggle true\r\nexport const toggleTrue = () => {\r\n    return {\r\n        type: TOGGLE_TRUE\r\n    }\r\n}\r\n\r\n// Toggle false\r\nexport const toggleFalse = () => {\r\n    return {\r\n        type: TOGGLE_FALSE\r\n    }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}