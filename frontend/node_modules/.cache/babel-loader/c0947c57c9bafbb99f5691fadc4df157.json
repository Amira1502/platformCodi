{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\n// Ã¯mport package react\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport { toast } from 'react-toast'; // import google & github login \n\nimport { GoogleLogin } from 'react-google-login';\nimport LoginGithub from 'react-login-github'; // import axios\n\nimport axios from 'axios';\nimport { authenticate, isAuth } from '../../helpers/auth';\nimport { LOGOUT } from '../../JS/actionsTypes/actionAuth'; // import CSS\n\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport './Navbar.css';\nimport useStyles from './styles'; // import logo\n\nimport logo from \"../../Assets/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles(); // send google token\n\n  const sendGoogleToken = tokenId => {\n    axios.post(`http://localhost:7000/api/googlelogin`, {\n      idToken: tokenId\n    }).then(res => {\n      console.log(res.data);\n      informParent(res);\n    }).catch(error => {\n      console.log('GOOGLE SIGNIN ERROR', error.response);\n    });\n  };\n\n  const informParent = response => {\n    authenticate(response, () => {\n      isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/private');\n    });\n  }; // send github token\n\n\n  const sendGithubToken = (clientID, requestToken, clientSecret) => {\n    axios.post(`${process.env.REACT_APP_API_URL}/githublogin`, {\n      clientID,\n      clientSecret,\n      requestToken\n    }).then(res => {\n      console.log(res.data);\n      informParent(res);\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  }; // handle google\n\n\n  const responseGoogle = response => {\n    console.log(response);\n    sendGoogleToken(response.tokenId);\n  };\n\n  const githubSuccess = response => {\n    console.log(response);\n    sendGithubToken(response.clientID, response.requestToken, response.clientSecret);\n  };\n\n  const githubFailure = response => console.error(response);\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n          className: classes.toolbar,\n          children: (user === null || user === void 0 ? void 0 : user.result) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profile,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.purple,\n              alt: user === null || user === void 0 ? void 0 : user.result.name,\n              src: user === null || user === void 0 ? void 0 : user.result.imageUrl,\n              children: user === null || user === void 0 ? void 0 : user.result.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.userName,\n              variant: \"h6\",\n              children: user === null || user === void 0 ? void 0 : user.result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: classes.logout,\n              color: \"secondary\",\n              onClick: logout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/auth\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"998922049920-3bhfhk05ff2nb9ivp1h811hhin6ilkgk.apps.googleusercontent.com\",\n          onSuccess: responseGoogle,\n          onFailure: responseGoogle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 2\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"XeXpE/Qk/U/lL8U7k92fFskTCFg=\", false, function () {\n  return [useDispatch, useLocation, useHistory, useStyles];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Components/Navbar/Navbar.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","decode","toast","GoogleLogin","LoginGithub","axios","authenticate","isAuth","LOGOUT","AppBar","Typography","Toolbar","Avatar","Button","useStyles","logo","Navbar","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","classes","sendGoogleToken","tokenId","post","idToken","then","res","console","log","data","informParent","catch","error","response","role","push","sendGithubToken","clientID","requestToken","clientSecret","process","env","REACT_APP_API_URL","responseGoogle","githubSuccess","githubFailure","token","decodedToken","exp","Date","getTime","logout","toolbar","result","profile","purple","name","imageUrl","charAt","userName"],"mappings":"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","sourcesContent":["// Ã¯mport package react\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport { toast } from 'react-toast'\r\n\r\n\r\n\r\n\r\n// import google & github login \r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LoginGithub from 'react-login-github';\r\n\r\n\r\n// import axios\r\nimport axios from 'axios';\r\n\r\nimport { authenticate, isAuth } from '../../helpers/auth';\r\nimport {LOGOUT} from '../../JS/actionsTypes/actionAuth';\r\n\r\n\r\n// import CSS\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core'\r\nimport './Navbar.css'\r\nimport useStyles from './styles';\r\n\r\n// import logo\r\nimport logo from \"../../Assets/logo.png\"\r\n\r\nconst Navbar =  ()  => {\r\n\r\n const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  // send google token\r\n  const sendGoogleToken = tokenId => {\r\n    axios\r\n      .post(`http://localhost:7000/api/googlelogin`, {\r\n        idToken: tokenId\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        informParent(res);\r\n      })\r\n      .catch(error => {\r\n        console.log('GOOGLE SIGNIN ERROR', error.response);\r\n      });\r\n  };\r\n  const informParent = response => {\r\n    authenticate(response, () => {\r\n      isAuth() && isAuth().role === 'admin'\r\n        ? history.push('/admin')\r\n        : history.push('/private');\r\n    });\r\n  };\r\n\r\n// send github token\r\n      const sendGithubToken = (clientID, requestToken, clientSecret) => {\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}/githublogin`, {\r\n            clientID, \r\n            clientSecret,\r\n            requestToken,\r\n            \r\n          })\r\n          .then(res => {\r\n            console.log(res.data);\r\n            informParent(res);\r\n          })\r\n          .catch(error => {\r\n            console.log('GITHUB SIGNIN ERROR', error.response);\r\n          });\r\n      };\r\n\r\n \r\n\r\n      // handle google\r\n      const responseGoogle = response => {\r\n        console.log(response);\r\n    sendGoogleToken(response.tokenId);\r\n      };\r\n\r\n      const githubSuccess = response => {\r\n        console.log(response);\r\n\r\n        sendGithubToken(response.clientID, response.requestToken, response.clientSecret)\r\n\r\n      }\r\n      const githubFailure = response =>\r\n       console.error(response);\r\n       useEffect(() => {\r\n        const token = user?.token;\r\n    \r\n        if (token) {\r\n          const decodedToken = decode(token);\r\n    \r\n          if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n        }\r\n    \r\n        setUser(JSON.parse(localStorage.getItem('profile')));\r\n      }, [location]);\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n      <AppBar color=\"white\">\r\n {/*logo */}\r\n  <img  src={logo} alt=\"logo\" className=\"logo\"></img>\r\n\r\n {/*button signin  logout */}\r\n <div className='buttons'>\r\n\r\n <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/auth\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n <GoogleLogin\r\n                  clientId=\"998922049920-3bhfhk05ff2nb9ivp1h811hhin6ilkgk.apps.googleusercontent.com\"\r\n                  onSuccess={responseGoogle}\r\n                  onFailure={responseGoogle}\r\n                  \r\n        />   \r\n       \r\n        </div> \r\n       \r\n           {/*<LoginGithub\r\n                  clientId={`${process.env.REACT_APP_GITHUB_CLIENT}`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n           ></LoginGithub>*/}\r\n\r\n\r\n        </AppBar> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}