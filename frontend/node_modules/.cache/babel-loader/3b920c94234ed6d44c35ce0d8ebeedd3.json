{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { Route, Switch } from \"react-router-dom\";\nimport { dispatchLogin, fetchUser, dispatchGetUser } from './JS/actions/actionAuth';\nimport { useDispatch, useSelector } from 'react-redux';\nimport React, { useEffect } from 'react';\nimport axios from 'axios'; // import componenets\n\nimport Navbar from './Components/Navbar/Navbar';\nimport Nav from './Components/Navbar/Nav';\nimport Footer from \"./Components/Footer/Footer\";\nimport AddEditProject from \"./Components/AddEditProject/AddEditProject\"; // import pages\n\nimport Home from './Pages/Home/Home';\nimport Profile from './Pages/Profile/Profile';\nimport Project from \"./Pages/Project/Project\";\nimport Errors from \"./Pages/Errors/Errors\";\nimport auth from \"./Pages/auth/auth\"; // css\n\nimport './App.css';\nimport Header from \"./Components/Navbar/Header\";\nimport Login from \"./Components/Login/Login\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const token = useSelector(state => state.token);\n  const auth = useSelector(state => state.auth);\n  useEffect(() => {\n    const firstLogin = localStorage.getItem('firstLogin');\n\n    if (firstLogin) {\n      const getToken = async () => {\n        const res = await axios.post('/api/refresh_token', null);\n        dispatch({\n          type: 'GET_TOKEN',\n          payload: res.data.access_token\n        });\n      };\n\n      getToken();\n    }\n  }, [auth.isLogged, dispatch]);\n  useEffect(() => {\n    if (token) {\n      const getUser = () => {\n        dispatch(dispatchLogin());\n        return fetchUser(token).then(res => {\n          dispatch(dispatchGetUser(res));\n        });\n      };\n\n      getUser();\n    }\n  }, [token, dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        component: Home\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile\",\n        component: Profile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        component: Login\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/project\",\n        component: Project\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/(add_project|edit_project)\",\n        component: AddEditProject\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/*\",\n        component: Errors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ktawS+ubDSYtBWRpfP+berKS1yM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/App.js"],"names":["Route","Switch","dispatchLogin","fetchUser","dispatchGetUser","useDispatch","useSelector","React","useEffect","axios","Navbar","Nav","Footer","AddEditProject","Home","Profile","Project","Errors","auth","Header","Login","App","dispatch","token","state","firstLogin","localStorage","getItem","getToken","res","post","type","payload","data","access_token","isLogged","getUser","then"],"mappings":"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","sourcesContent":["import { Route, Switch } from \"react-router-dom\";\nimport {dispatchLogin, fetchUser, dispatchGetUser} from './JS/actions/actionAuth'\nimport {useDispatch, useSelector} from 'react-redux'\nimport React, {useEffect} from 'react';\nimport axios from 'axios'\n\n\n\n// import componenets\nimport Navbar from './Components/Navbar/Navbar'\nimport Nav from './Components/Navbar/Nav'\n\nimport Footer from \"./Components/Footer/Footer\";\nimport AddEditProject from \"./Components/AddEditProject/AddEditProject\";\n\n\n\n// import pages\nimport Home from './Pages/Home/Home';\nimport Profile from './Pages/Profile/Profile';\nimport Project from \"./Pages/Project/Project\";\nimport Errors from \"./Pages/Errors/Errors\";\nimport auth from \"./Pages/auth/auth\";\n\n\n\n\n// css\nimport './App.css';\nimport Header from \"./Components/Navbar/Header\";\nimport Login from \"./Components/Login/Login\";\n\n\n\n\nfunction App() {\n\n  const dispatch = useDispatch()\n  const token = useSelector(state => state.token)\n  const auth = useSelector(state => state.auth)\n\n  useEffect(() => {\n    const firstLogin = localStorage.getItem('firstLogin')\n    if(firstLogin){\n      const getToken = async () => {\n        const res = await axios.post('/api/refresh_token', null)\n        dispatch({type: 'GET_TOKEN', payload: res.data.access_token})\n      }\n      getToken()\n    }\n  },[auth.isLogged, dispatch])\n\n  useEffect(() => {\n    if(token){\n      const getUser = () => {\n        dispatch(dispatchLogin())\n\n        return fetchUser(token).then(res => {\n          dispatch(dispatchGetUser(res))\n        })\n      }\n      getUser()\n    }\n  },[token, dispatch])\n\n  return (\n    <div>\n      <Header/>\n      \n      <Switch>\n        \n      <Route path=\"/\" exact component={Home} />\n      \n      <Route path=\"/profile\" component={Profile} />\n      \n      <Route path=\"/login\" component={Login} />\n\n\n      <Route path=\"/project\" component={Project} />\n\n      <Route path=\"/(add_project|edit_project)\" component={AddEditProject} /> \n      \n      <Route path=\"/*\" component={Errors} />\n      </Switch>\n\n  <Footer />      \n    </div>\n\n  \n  )\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}