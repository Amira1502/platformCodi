{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\n// ïmport package react\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode'; // import google & github login \n\nimport { GoogleLogin } from 'react-google-login';\nimport LoginGithub from 'react-login-github'; // import axios\n\nimport axios from 'axios';\nimport { authenticate, isAuth } from '../../helpers/auth';\nimport { LOGOUT } from '../../JS/actionsTypes/actionAuth'; // import CSS\n\nimport { AppBar, Typography, IconButton, Avatar, Button, Menu, MenuItem } from '@material-ui/core';\nimport './Navbar.css'; // import logo\n\nimport logo from \"../../Assets/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory(); // send google token\n\n  const sendGoogleToken = tokenId => {\n    axios.post(`${process.env.REACT_APP_API_URL}/googlelogin`, {\n      idToken: tokenId\n    }).then(res => {\n      console.log(res.data); //informParent(res);\n\n      history.push('/project');\n    }).catch(error => {\n      console.log('GOOGLE SIGNIN ERROR', error.response);\n    });\n  }; // send github token\n\n\n  const sendGithubToken = (clientID, requestToken, clientSecret) => {\n    axios.post(`${process.env.REACT_APP_API_URL}/githublogin`, {\n      clientID,\n      clientSecret,\n      requestToken\n    }).then(res => {\n      console.log(res.data);\n      informParent(res);\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  };\n\n  const informParent = response => {\n    authenticate(response, () => {\n      isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/profile');\n    });\n  }; // handle google\n\n\n  const responseGoogle = response => {\n    console.log(response);\n    sendGoogleToken(response.tokenId);\n  };\n\n  const githubSuccess = response => {\n    console.log(response);\n    sendGithubToken(response.clientID, response.requestToken, response.clientSecret);\n  };\n\n  const githubFailure = response => console.error(response); // Logout\n\n\n  const logout = () => {\n    dispatch({\n      LOGOUT\n    });\n    history.push('/');\n    setUser(null);\n  }; // useeffect    \n\n\n  useEffect(() => {\n    const token = user === null || user === void 0 ? void 0 : user.token;\n\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n\n    setUser(JSON.parse(localStorage.getItem('profile')));\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: `${process.env.REACT_APP_GOOGLE_CLIENT}`,\n          buttonText: \"Login with Google\",\n          onSuccess: responseGoogle,\n          onFailure: responseGoogle,\n          cookiePolicy: 'single_host_origin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(LoginGithub, {\n        clientId: `${process.env.REACT_APP_GITHUB_CLIENT}`,\n        buttonText: \"Login with Github\",\n        onSuccess: githubSuccess,\n        onFailure: githubFailure,\n        className: \"icon-github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"aWaVhLSJ+Lt0CtdohXf9/GMb3DI=\", false, function () {\n  return [useDispatch, useLocation, useHistory];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Components/Navbar/Navbar.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","decode","GoogleLogin","LoginGithub","axios","authenticate","isAuth","LOGOUT","AppBar","Typography","IconButton","Avatar","Button","Menu","MenuItem","logo","Navbar","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","sendGoogleToken","tokenId","post","process","env","REACT_APP_API_URL","idToken","then","res","console","log","data","push","catch","error","response","sendGithubToken","clientID","requestToken","clientSecret","informParent","role","responseGoogle","githubSuccess","githubFailure","logout","token","decodedToken","exp","Date","getTime","REACT_APP_GOOGLE_CLIENT","REACT_APP_GITHUB_CLIENT"],"mappings":"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","sourcesContent":["// ïmport package react\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\n\r\n\r\n\r\n// import google & github login \r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LoginGithub from 'react-login-github';\r\n\r\n\r\n// import axios\r\nimport axios from 'axios';\r\n\r\nimport { authenticate, isAuth } from '../../helpers/auth';\r\nimport {LOGOUT} from '../../JS/actionsTypes/actionAuth';\r\n\r\n\r\n// import CSS\r\nimport { AppBar, Typography,  IconButton, Avatar, Button, Menu, MenuItem } from '@material-ui/core';\r\nimport './Navbar.css'\r\n\r\n// import logo\r\nimport logo from \"../../Assets/logo.png\"\r\n\r\nconst Navbar =  ()  => {\r\n\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n\r\n  // send google token\r\n    const sendGoogleToken = tokenId => {\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}/googlelogin`, {\r\n            idToken: tokenId\r\n          })\r\n          .then(res => {\r\n            console.log(res.data);\r\n            //informParent(res);\r\n            history.push('/project');\r\n\r\n          })\r\n          .catch(error => {\r\n            console.log('GOOGLE SIGNIN ERROR', error.response);\r\n          });\r\n      };\r\n\r\n// send github token\r\n      const sendGithubToken = (clientID, requestToken, clientSecret) => {\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}/githublogin`, {\r\n            clientID, \r\n            clientSecret,\r\n            requestToken,\r\n            \r\n          })\r\n          .then(res => {\r\n            console.log(res.data);\r\n            informParent(res);\r\n          })\r\n          .catch(error => {\r\n            console.log('GITHUB SIGNIN ERROR', error.response);\r\n          });\r\n      };\r\n\r\n      const informParent = response => {\r\n        authenticate(response, () => {\r\n          isAuth() && isAuth().role === 'admin'\r\n            ? history.push('/admin')\r\n            : history.push('/profile');\r\n        });\r\n      };\r\n\r\n      // handle google\r\n      const responseGoogle = response => {\r\n        console.log(response);\r\n        sendGoogleToken(response.tokenId);\r\n      };\r\n\r\n      const githubSuccess = response => {\r\n        console.log(response);\r\n\r\n        sendGithubToken(response.clientID, response.requestToken, response.clientSecret)\r\n\r\n      }\r\n      const githubFailure = response =>\r\n       console.error(response);\r\n\r\n  // Logout\r\n  const logout = () => {\r\n    dispatch({ LOGOUT });\r\n\r\n    history.push('/');\r\n\r\n    setUser(null);\r\n  };\r\n \r\n   // useeffect    \r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem('profile')));\r\n  }, [location]);\r\n\r\n    return (\r\n        <div>\r\n      <AppBar color=\"white\">\r\n {/*logo */}\r\n  <img  src={logo} alt=\"logo\" className=\"logo\"></img>\r\n\r\n {/*button signin  logout */}\r\n <div className='buttons'> \r\n \r\n\r\n            \r\n         \r\n        <GoogleLogin\r\n                  clientId={`${process.env.REACT_APP_GOOGLE_CLIENT}`}\r\n                  buttonText=\"Login with Google\"\r\n                  onSuccess={responseGoogle}\r\n                  onFailure={responseGoogle}\r\n                  cookiePolicy={'single_host_origin'}\r\n                ></GoogleLogin>\r\n                </div>\r\n<LoginGithub\r\n                  clientId={`${process.env.REACT_APP_GITHUB_CLIENT}`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n            ></LoginGithub>\r\n                \r\n\r\n          \r\n\r\n\r\n        </AppBar> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}