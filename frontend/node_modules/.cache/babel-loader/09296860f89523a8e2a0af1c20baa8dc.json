{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Pages\\\\auth\\\\auth.js\",\n    _s = $RefreshSig$();\n\n// import package\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LoginGithub from 'react-login-github'; // import axios\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: '',\n  password: '',\n  err: '',\n  success: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const [user, setUser] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const {\n    email,\n    password,\n    err,\n    success\n  } = user; // send github token\n\n  const sendGithubToken = (client_id, code, client_secret) => {\n    axios.post(`http://localhost:7000/api/githublogin`, {\n      client_id,\n      code,\n      client_secret\n    }).then(res => {\n      console.log(res.data); //informParent(res);\n\n      history.push('/project');\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  };\n\n  const githubSuccess = async response => {\n    try {\n      console.log(response);\n      const res = sendGithubToken(response.client_secret, response.code, response.client_id);\n      setUser({ ...user,\n        error: '',\n        success: res.data.msg\n      });\n    } catch (err) {\n      err.response.data.msg && setUser({ ...user,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const githubFailure = response => console.error(response);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginGithub, {\n      clientId: `e8db77544d2e4e9ab741`,\n      buttonText: \"Login with Github\",\n      onSuccess: githubSuccess,\n      onFailure: githubFailure,\n      className: \"icon-github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"rfAOtBYRwTe102iHjKw9MAM/qlg=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Pages/auth/auth.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","LoginGithub","axios","initialState","email","password","err","success","Auth","user","setUser","dispatch","history","sendGithubToken","client_id","code","client_secret","post","then","res","console","log","data","push","catch","error","response","githubSuccess","msg","githubFailure"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAA0C,OAAOC,WAAP,MAAwB,oBAAxB,C,CAE1C;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,GAAG,EAAE,EAHc;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;;AAOA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAACQ,YAAD,CAAhC;AACA,QAAMQ,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAMY,OAAO,GAAGd,UAAU,EAA1B;AAEA,QAAM;AAACM,IAAAA,KAAD;AAAQC,IAAAA,QAAR;AAAkBC,IAAAA,GAAlB;AAAuBC,IAAAA;AAAvB,MAAkCE,IAAxC,CANe,CAQjB;;AACF,QAAMI,eAAe,GAAG,CAACC,SAAD,EAAYC,IAAZ,EAAkBC,aAAlB,KAAoC;AAC1Dd,IAAAA,KAAK,CACFe,IADH,CACS,uCADT,EACiD;AAC7CH,MAAAA,SAD6C;AAE7CC,MAAAA,IAF6C;AAG7CC,MAAAA;AAH6C,KADjD,EAOGE,IAPH,CAOQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EADW,CAEX;;AACAV,MAAAA,OAAO,CAACW,IAAR,CAAa,UAAb;AACD,KAXH,EAYGC,KAZH,CAYSC,KAAK,IAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCI,KAAK,CAACC,QAAzC;AACD,KAdH;AAeD,GAhBD;;AAkBA,QAAMC,aAAa,GAAG,MAAMD,QAAN,IAAmB;AACvC,QAAG;AACDN,MAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AAGA,YAAMP,GAAG,GAAIN,eAAe,CAACa,QAAQ,CAACV,aAAV,EAAyBU,QAAQ,CAACX,IAAlC,EAAwCW,QAAQ,CAACZ,SAAjD,CAA5B;AACAJ,MAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUgB,QAAAA,KAAK,EAAC,EAAhB;AAAoBlB,QAAAA,OAAO,EAAEY,GAAG,CAACG,IAAJ,CAASM;AAAtC,OAAD,CAAP;AACD,KAND,CAMC,OAAOtB,GAAP,EAAY;AACXA,MAAAA,GAAG,CAACoB,QAAJ,CAAaJ,IAAb,CAAkBM,GAAlB,IACAlB,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUH,QAAAA,GAAG,EAAEA,GAAG,CAACoB,QAAJ,CAAaJ,IAAb,CAAkBM,GAAjC;AAAsCrB,QAAAA,OAAO,EAAE;AAA/C,OAAD,CADP;AAEH;AAIA,GAdD;;AAeA,QAAMsB,aAAa,GAAGH,QAAQ,IAC7BN,OAAO,CAACK,KAAR,CAAcC,QAAd,CADD;;AAEE,sBACE;AAAA,2BACE,QAAC,WAAD;AACY,MAAA,QAAQ,EAAG,sBADvB;AAEY,MAAA,UAAU,EAAC,mBAFvB;AAGY,MAAA,SAAS,EAAEC,aAHvB;AAIY,MAAA,SAAS,EAAEE,aAJvB;AAKY,MAAA,SAAS,EAAC;AALtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAxDD;;GAAMrB,I;UAGeR,W,EACDF,U;;;KAJdU,I;AA0DN,eAAeA,IAAf","sourcesContent":["// import package\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';import LoginGithub from 'react-login-github';\r\n\r\n// import axios\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n  err: '',\r\n  success: ''\r\n}\r\n\r\nconst Auth = () => {\r\n\r\n    const [user, setUser] = useState(initialState)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const {email, password, err, success} = user\r\n\r\n  // send github token\r\nconst sendGithubToken = (client_id, code, client_secret) => {\r\n  axios\r\n    .post(`http://localhost:7000/api/githublogin`, {\r\n      client_id, \r\n      code,\r\n      client_secret\r\n      \r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //informParent(res);\r\n      history.push('/project')\r\n    })\r\n    .catch(error => {\r\n      console.log('GITHUB SIGNIN ERROR', error.response);\r\n    });\r\n};\r\n\r\nconst githubSuccess = async(response) => {\r\n  try{  \r\n    console.log(response);\r\n\r\n\r\n    const res =  sendGithubToken(response.client_secret, response.code, response.client_id)\r\n    setUser({...user, error:'', success: res.data.msg})\r\n  }catch (err) {\r\n    err.response.data.msg && \r\n    setUser({...user, err: err.response.data.msg, success: ''})\r\n}\r\n\r\n\r\n\r\n}\r\nconst githubFailure = response =>\r\n console.error(response);\r\n  return (\r\n    <div>\r\n      <LoginGithub\r\n                  clientId={`e8db77544d2e4e9ab741`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n                \r\n           ></LoginGithub>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"module"}