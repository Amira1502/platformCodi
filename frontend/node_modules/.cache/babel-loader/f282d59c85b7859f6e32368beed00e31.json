{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Components\\\\Navbar\\\\Navbar.js\";\n// ïmport package react\nimport React from 'react'; // import google & github login \n\nimport { GoogleLogin } from 'react-google-login';\nimport LoginGithub from 'react-login-github';\nimport GithubButton from 'react-github-login-button'; // import axios\n\nimport axios from 'axios';\nimport { authenticate, isAuth } from '../../helpers/auth'; // import CSS\n\nimport { AppBar, Typography, IconButton, Avatar, Button, Menu, MenuItem } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = ({\n  history\n}) => {\n  const sendGoogleToken = tokenId => {\n    axios.post(`${process.env.REACT_APP_API_URL}/googlelogin`, {\n      idToken: tokenId\n    }).then(res => {\n      console.log(res.data);\n      informParent(res);\n    }).catch(error => {\n      console.log('GOOGLE SIGNIN ERROR', error.response);\n    });\n  };\n\n  const sendGithubToken = (clientID, requestToken, clientSecret) => {\n    axios.post(`${process.env.REACT_APP_API_URL}/githublogin`, {\n      clientID,\n      clientSecret,\n      requestToken\n    }).then(res => {\n      console.log(res.data);\n      informParent(res);\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  };\n\n  const informParent = response => {\n    authenticate(response, () => {\n      isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/profile');\n    });\n  };\n\n  const responseGoogle = response => {\n    console.log(response);\n    sendGoogleToken(response.tokenId);\n  };\n\n  const onSuccess = response => {\n    console.log(response);\n    sendGithubToken(response.clientID, response.requestToken, response.clientSecret);\n  };\n\n  const onFailure = response => console.error(response);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: `${process.env.REACT_APP_GOOGLE_CLIENT}`,\n        buttonText: \"Login with Google\",\n        onSuccess: responseGoogle,\n        onFailure: responseGoogle,\n        cookiePolicy: 'single_host_origin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(GithubButton, {\n        onClick: () => {\n          console.log('Github button clicked');\n        },\n        children: /*#__PURE__*/_jsxDEV(LoginGithub, {\n          clientId: \"e8db77544d2e4e9ab741\",\n          onSuccess: onSuccess,\n          onFailure: onFailure\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 1\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Components/Navbar/Navbar.js"],"names":["React","GoogleLogin","LoginGithub","GithubButton","axios","authenticate","isAuth","AppBar","Typography","IconButton","Avatar","Button","Menu","MenuItem","Navbar","history","sendGoogleToken","tokenId","post","process","env","REACT_APP_API_URL","idToken","then","res","console","log","data","informParent","catch","error","response","sendGithubToken","clientID","requestToken","clientSecret","role","push","responseGoogle","onSuccess","onFailure","REACT_APP_GOOGLE_CLIENT"],"mappings":"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","sourcesContent":["// ïmport package react\r\nimport React from 'react'\r\n\r\n// import google & github login \r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LoginGithub from 'react-login-github';\r\nimport GithubButton from 'react-github-login-button'\r\n\r\n\r\n// import axios\r\nimport axios from 'axios';\r\n\r\nimport { authenticate, isAuth } from '../../helpers/auth';\r\n\r\n// import CSS\r\nimport { AppBar, Typography,  IconButton, Avatar, Button, Menu, MenuItem } from '@material-ui/core';\r\n\r\n\r\nconst Navbar =  ({ history })  => {\r\n\r\n    const sendGoogleToken = tokenId => {\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}/googlelogin`, {\r\n            idToken: tokenId\r\n          })\r\n          .then(res => {\r\n            console.log(res.data);\r\n            informParent(res);\r\n          })\r\n          .catch(error => {\r\n            console.log('GOOGLE SIGNIN ERROR', error.response);\r\n          });\r\n      };\r\n\r\n      const sendGithubToken = (clientID, requestToken, clientSecret) => {\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}/githublogin`, {\r\n            clientID, \r\n            clientSecret,\r\n            requestToken,\r\n            \r\n          })\r\n          .then(res => {\r\n            console.log(res.data);\r\n            informParent(res);\r\n          })\r\n          .catch(error => {\r\n            console.log('GITHUB SIGNIN ERROR', error.response);\r\n          });\r\n      };\r\n\r\n      const informParent = response => {\r\n        authenticate(response, () => {\r\n          isAuth() && isAuth().role === 'admin'\r\n            ? history.push('/admin')\r\n            : history.push('/profile');\r\n        });\r\n      };\r\n      const responseGoogle = response => {\r\n        console.log(response);\r\n        sendGoogleToken(response.tokenId);\r\n      };\r\n\r\n      const onSuccess = response => {\r\n        console.log(response);\r\n\r\n        sendGithubToken(response.clientID, response.requestToken, response.clientSecret)\r\n\r\n      }\r\n      const onFailure = response => console.error(response);\r\n \r\n    return (\r\n        <div>\r\n                     <AppBar color=\"white\">\r\n\r\n           <GoogleLogin\r\n                  clientId={`${process.env.REACT_APP_GOOGLE_CLIENT}`}\r\n                  buttonText=\"Login with Google\"\r\n                  onSuccess={responseGoogle}\r\n                  onFailure={responseGoogle}\r\n                  cookiePolicy={'single_host_origin'}\r\n            \r\n                   \r\n                ></GoogleLogin>\r\n\r\n<GithubButton\r\n  onClick={() => { console.log('Github button clicked') }}\r\n>  \r\n<LoginGithub clientId=\"e8db77544d2e4e9ab741\"\r\n    onSuccess={onSuccess}\r\n    onFailure={onFailure}/>\r\n  </GithubButton>\r\n\r\n        </AppBar> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}