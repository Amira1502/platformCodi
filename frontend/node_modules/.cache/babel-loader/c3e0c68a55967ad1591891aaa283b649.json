{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Pages\\\\Project\\\\Project.js\",\n    _s = $RefreshSig$();\n\n// import package\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // import component\n\nimport { getProjects } from '../../JS/actions/actionProject';\nimport ProjectCard from '../../Components/ProjectCard/ProjectCard'; // import CSS\n\nimport './Project.css';\nimport { Spinner } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Project = () => {\n  _s();\n\n  const projects = useSelector(state => state.projectReducer.projects);\n  const loadProjects = useSelector(state => state.projectReducer.loadProjects);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProjects());\n  }, [dispatch]);\n  return loadProjects ? /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    variant: \"info\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 27\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Our Available Projects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), projects.map(project => /*#__PURE__*/_jsxDEV(ProjectCard, {\n        project: project\n      }, project._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 13\n  }, this);\n};\n\n_s(Project, \"twvYD4u0h9KpT7pxFta99o7ciZU=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = Project;\nexport default Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Pages/Project/Project.js"],"names":["React","useEffect","useSelector","useDispatch","getProjects","ProjectCard","Spinner","Project","projects","state","projectReducer","loadProjects","dispatch","map","project","_id"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,WAAT,QAA4B,gCAA5B;AACA,OAAOC,WAAP,MAAwB,0CAAxB,C,CACA;;AACA,OAAO,eAAP;AACA,SAAQC,OAAR,QAAsB,iBAAtB;;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAMC,QAAQ,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBF,QAA/B,CAA5B;AACA,QAAMG,YAAY,GAAGT,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,cAAN,CAAqBC,YAA/B,CAAhC;AAEA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZW,IAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACH,GAFQ,EAEN,CAACQ,QAAD,CAFM,CAAT;AAIA,SAEKD,YAAY,gBAAK,QAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,UAAL,gBAET;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADA,EAEKH,QAAQ,CAACK,GAAT,CAAaC,OAAO,iBACjB,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEA;AAAtB,SAAoCA,OAAO,CAACC,GAA5C;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UAJR;AAeH,CA1BD;;GAAMR,O;UAEeL,W,EACIA,W,EAEJC,W;;;KALfI,O;AA4BN,eAAeA,OAAf","sourcesContent":["// import package\r\nimport React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n \r\n// import component\r\nimport { getProjects } from '../../JS/actions/actionProject'\r\nimport ProjectCard from '../../Components/ProjectCard/ProjectCard'\r\n// import CSS\r\nimport './Project.css'\r\nimport {Spinner} from \"react-bootstrap\"\r\n\r\n\r\n\r\nconst Project = () => {\r\n\r\n    const projects = useSelector(state => state.projectReducer.projects)\r\n    const loadProjects = useSelector(state => state.projectReducer.loadProjects)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getProjects())\r\n    }, [dispatch]);\r\n\r\n    return (\r\n    \r\n         loadProjects ?   <Spinner animation=\"border\" variant=\"info\" />\r\n            : \r\n            <div className=\"projects-content\">\r\n                <div className=\"projects-list\">\r\n                <h2>Our Available Projects</h2>\r\n                    {projects.map(project =>\r\n                        <ProjectCard project={project} key={project._id} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n     \r\n        \r\n    )\r\n}\r\n\r\nexport default Project"]},"metadata":{},"sourceType":"module"}