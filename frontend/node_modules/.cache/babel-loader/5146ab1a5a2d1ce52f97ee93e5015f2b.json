{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Components\\\\Navbar\\\\Navbar.js\";\nimport React from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport LoginGithub from 'react-login-github';\nimport axios from 'axios';\nimport { authenticate, isAuth } from '../../helpers/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = ({\n  history\n}) => {\n  const sendGoogleToken = tokenId => {\n    axios.post(`${process.env.REACT_APP_API_URL}/googlelogin`, {\n      idToken: tokenId\n    }).then(res => {\n      console.log(res.data);\n      informParent(res);\n    }).catch(error => {\n      console.log('GOOGLE SIGNIN ERROR', error.response);\n    });\n  };\n\n  const sendGithubToken = (GITHUB_CLIENT, GITHUB_REDIRECT_URI) => {\n    axios.post(`${process.env.REACT_APP_API_URL}/githublogin`, {\n      GITHUB_CLIENT,\n      GITHUB_REDIRECT_URI\n    }).then(res => {\n      console.log(res.data);\n      informParent(res);\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  };\n\n  const informParent = response => {\n    authenticate(response, () => {\n      isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/profile');\n    });\n  };\n\n  const responseGoogle = response => {\n    console.log(response);\n    sendGoogleToken(response.tokenId);\n  };\n\n  const onSuccess = response => {\n    console.log(response);\n    sendGithubToken(response.GITHUB_CLIENT, response.GITHUB_REDIRECT_URI);\n  };\n\n  const onFailure = response => console.error(response);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: `${process.env.REACT_APP_GOOGLE_CLIENT}`,\n      buttonText: \"Login with Google\",\n      onSuccess: responseGoogle,\n      onFailure: responseGoogle,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(LoginGithub, {\n      clientId: \"e8db77544d2e4e9ab741\",\n      onSuccess: onSuccess,\n      onFailure: onFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Components/Navbar/Navbar.js"],"names":["React","GoogleLogin","LoginGithub","axios","authenticate","isAuth","Navbar","history","sendGoogleToken","tokenId","post","process","env","REACT_APP_API_URL","idToken","then","res","console","log","data","informParent","catch","error","response","sendGithubToken","GITHUB_CLIENT","GITHUB_REDIRECT_URI","role","push","responseGoogle","onSuccess","onFailure","REACT_APP_GOOGLE_CLIENT"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,oBAA5B;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,MAAvB,QAAqC,oBAArC;;;AAEA,MAAMC,MAAM,GAAI,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAE9B,QAAMC,eAAe,GAAGC,OAAO,IAAI;AAC/BN,IAAAA,KAAK,CACFO,IADH,CACS,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,cADzC,EACwD;AACpDC,MAAAA,OAAO,EAAEL;AAD2C,KADxD,EAIGM,IAJH,CAIQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAC,MAAAA,YAAY,CAACJ,GAAD,CAAZ;AACD,KAPH,EAQGK,KARH,CAQSC,KAAK,IAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCI,KAAK,CAACC,QAAzC;AACD,KAVH;AAWD,GAZH;;AAcE,QAAMC,eAAe,GAAG,CAACC,aAAD,EAAgBC,mBAAhB,KAAwC;AAC9DvB,IAAAA,KAAK,CACFO,IADH,CACS,GAAEC,OAAO,CAACC,GAAR,CAAYC,iBAAkB,cADzC,EACwD;AACpDY,MAAAA,aADoD;AAEpDC,MAAAA;AAFoD,KADxD,EAKGX,IALH,CAKQC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB;AACAC,MAAAA,YAAY,CAACJ,GAAD,CAAZ;AACD,KARH,EASGK,KATH,CASSC,KAAK,IAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCI,KAAK,CAACC,QAAzC;AACD,KAXH;AAYD,GAbD;;AAeA,QAAMH,YAAY,GAAGG,QAAQ,IAAI;AAC/BnB,IAAAA,YAAY,CAACmB,QAAD,EAAW,MAAM;AAC3BlB,MAAAA,MAAM,MAAMA,MAAM,GAAGsB,IAAT,KAAkB,OAA9B,GACIpB,OAAO,CAACqB,IAAR,CAAa,QAAb,CADJ,GAEIrB,OAAO,CAACqB,IAAR,CAAa,UAAb,CAFJ;AAGD,KAJW,CAAZ;AAKD,GAND;;AAOA,QAAMC,cAAc,GAAGN,QAAQ,IAAI;AACjCN,IAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AACAf,IAAAA,eAAe,CAACe,QAAQ,CAACd,OAAV,CAAf;AACD,GAHD;;AAKA,QAAMqB,SAAS,GAAGP,QAAQ,IAAI;AAC5BN,IAAAA,OAAO,CAACC,GAAR,CAAYK,QAAZ;AAEAC,IAAAA,eAAe,CAACD,QAAQ,CAACE,aAAV,EAAyBF,QAAQ,CAACG,mBAAlC,CAAf;AAED,GALD;;AAMA,QAAMK,SAAS,GAAGR,QAAQ,IAAIN,OAAO,CAACK,KAAR,CAAcC,QAAd,CAA9B;;AAEF,sBACI;AAAA,4BACG,QAAC,WAAD;AACO,MAAA,QAAQ,EAAG,GAAEZ,OAAO,CAACC,GAAR,CAAYoB,uBAAwB,EADxD;AAEO,MAAA,UAAU,EAAC,mBAFlB;AAGO,MAAA,SAAS,EAAEH,cAHlB;AAIO,MAAA,SAAS,EAAEA,cAJlB;AAKO,MAAA,YAAY,EAAE;AALrB;AAAA;AAAA;AAAA;AAAA,YADH,eAYJ,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAC,sBAAtB;AACA,MAAA,SAAS,EAAEC,SADX;AAEA,MAAA,SAAS,EAAEC;AAFX;AAAA;AAAA;AAAA;AAAA,YAZI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAtED;;KAAMzB,M;AAwEN,eAAeA,MAAf","sourcesContent":["import React from 'react'\r\nimport { GoogleLogin } from 'react-google-login';\r\n\r\nimport LoginGithub from 'react-login-github';\r\n\r\n\r\nimport axios from 'axios';\r\nimport { authenticate, isAuth } from '../../helpers/auth';\r\n\r\nconst Navbar =  ({ history })  => {\r\n\r\n    const sendGoogleToken = tokenId => {\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}/googlelogin`, {\r\n            idToken: tokenId\r\n          })\r\n          .then(res => {\r\n            console.log(res.data);\r\n            informParent(res);\r\n          })\r\n          .catch(error => {\r\n            console.log('GOOGLE SIGNIN ERROR', error.response);\r\n          });\r\n      };\r\n\r\n      const sendGithubToken = (GITHUB_CLIENT, GITHUB_REDIRECT_URI) => {\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}/githublogin`, {\r\n            GITHUB_CLIENT,\r\n            GITHUB_REDIRECT_URI\r\n          })\r\n          .then(res => {\r\n            console.log(res.data);\r\n            informParent(res);\r\n          })\r\n          .catch(error => {\r\n            console.log('GITHUB SIGNIN ERROR', error.response);\r\n          });\r\n      };\r\n\r\n      const informParent = response => {\r\n        authenticate(response, () => {\r\n          isAuth() && isAuth().role === 'admin'\r\n            ? history.push('/admin')\r\n            : history.push('/profile');\r\n        });\r\n      };\r\n      const responseGoogle = response => {\r\n        console.log(response);\r\n        sendGoogleToken(response.tokenId);\r\n      };\r\n\r\n      const onSuccess = response => {\r\n        console.log(response);\r\n\r\n        sendGithubToken(response.GITHUB_CLIENT, response.GITHUB_REDIRECT_URI)\r\n\r\n      }\r\n      const onFailure = response => console.error(response);\r\n \r\n    return (\r\n        <div>\r\n           <GoogleLogin\r\n                  clientId={`${process.env.REACT_APP_GOOGLE_CLIENT}`}\r\n                  buttonText=\"Login with Google\"\r\n                  onSuccess={responseGoogle}\r\n                  onFailure={responseGoogle}\r\n                  cookiePolicy={'single_host_origin'}\r\n            \r\n                   \r\n                ></GoogleLogin>\r\n\r\n\r\n    <LoginGithub clientId=\"e8db77544d2e4e9ab741\"\r\n    onSuccess={onSuccess}\r\n    onFailure={onFailure}/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}