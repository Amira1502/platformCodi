{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Pages\\\\auth\\\\auth.js\",\n    _s = $RefreshSig$();\n\n// import package\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LoginGithub from 'react-login-github';\nimport { dispatchLogin } from '../../JS/actions/actionAuth';\nimport { useSelector } from 'react-redux'; // import axios\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  email: '',\n  password: '',\n  err: '',\n  success: ''\n};\n\nconst Auth = () => {\n  _s();\n\n  const [user, setUser] = useState(initialState);\n  const dispatch = useDispatch();\n  const history = useHistory(); // send github token\n\n  {\n    /*const sendGithubToken = (client_id, code, client_secret) => {\r\n     axios\r\n       .post(`http://localhost:7000/api/githublogin`, {\r\n         client_id, \r\n         code,\r\n         client_secret\r\n         \r\n       })\r\n       .then(res => {\r\n         console.log(res.data);\r\n         //informParent(res);\r\n         history.push('/project')\r\n       })\r\n       .catch(error => {\r\n         console.log('GITHUB SIGNIN ERROR', error.response);\r\n       });\r\n    };*/\n  }\n\n  const githubSuccess = async response => {\n    try {\n      const {\n        client_id,\n        code,\n        client_secret\n      } = response;\n      const res = await axios.post('http://localhost:7000/api/githublogin', {\n        client_id,\n        code,\n        client_secret\n      }).then(res => {\n        console.log(res.data); //informParent(res);\n\n        dispatch(dispatchLogin()); //history.push('/project')\n\n        setUser({ ...user,\n          error: '',\n          success: res.data.msg\n        });\n      });\n    } catch (err) {\n      err.response.data.msg && setUser({ ...user,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const githubFailure = response => console.error(response);\n\n  const auth = useSelector(state => state.auth);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LoginGithub, {\n      clientId: `e8db77544d2e4e9ab741`,\n      buttonText: \"Login with Github\",\n      onSuccess: githubSuccess,\n      onFailure: githubFailure,\n      className: \"icon-github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), user.name, user.Login]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"IXNSBI6CxpBv1xn9iXXWuJru/sA=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Pages/auth/auth.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","LoginGithub","dispatchLogin","useSelector","axios","initialState","email","password","err","success","Auth","user","setUser","dispatch","history","githubSuccess","response","client_id","code","client_secret","res","post","then","console","log","data","error","msg","githubFailure","auth","state","name","Login"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAAQC,aAAR,QAA4B,6BAA5B;AACA,SAAQC,WAAR,QAA0B,aAA1B,C,CAGA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,QAAQ,EAAE,EAFS;AAGnBC,EAAAA,GAAG,EAAE,EAHc;AAInBC,EAAAA,OAAO,EAAE;AAJU,CAArB;;AAOA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAACU,YAAD,CAAhC;AACA,QAAMQ,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,OAAO,GAAGhB,UAAU,EAA1B,CAJe,CAQjB;;AACF;AAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAK;;AAEL,QAAMiB,aAAa,GAAG,MAAMC,QAAN,IAAmB;AACvC,QAAG;AACD,YAAM;AACHC,QAAAA,SADG;AAEJC,QAAAA,IAFI;AAGJC,QAAAA;AAHI,UAIHH,QAJH;AAOA,YAAMI,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAN,CAAW,uCAAX,EAAoD;AACtEJ,QAAAA,SADsE;AAEtEC,QAAAA,IAFsE;AAGtEC,QAAAA;AAHsE,OAApD,EAGFG,IAHE,CAGGF,GAAG,IAAI;AAC1BG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB,EAD0B,CAE1B;;AACAZ,QAAAA,QAAQ,CAACX,aAAa,EAAd,CAAR,CAH0B,CAI5B;;AACAU,QAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUe,UAAAA,KAAK,EAAC,EAAhB;AAAoBjB,UAAAA,OAAO,EAAEW,GAAG,CAACK,IAAJ,CAASE;AAAtC,SAAD,CAAP;AACC,OATiB,CAAlB;AAYD,KApBD,CAoBC,OAAOnB,GAAP,EAAY;AACXA,MAAAA,GAAG,CAACQ,QAAJ,CAAaS,IAAb,CAAkBE,GAAlB,IACAf,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAUH,QAAAA,GAAG,EAAEA,GAAG,CAACQ,QAAJ,CAAaS,IAAb,CAAkBE,GAAjC;AAAsClB,QAAAA,OAAO,EAAE;AAA/C,OAAD,CADP;AAEH;AAIA,GA5BD;;AA6BA,QAAMmB,aAAa,GAAGZ,QAAQ,IAC7BO,OAAO,CAACG,KAAR,CAAcV,QAAd,CADD;;AAGC,QAAMa,IAAI,GAAG1B,WAAW,CAAC2B,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AAEC,sBACE;AAAA,4BACE,QAAC,WAAD;AACY,MAAA,QAAQ,EAAG,sBADvB;AAEY,MAAA,UAAU,EAAC,mBAFvB;AAGY,MAAA,SAAS,EAAEd,aAHvB;AAIY,MAAA,SAAS,EAAEa,aAJvB;AAKY,MAAA,SAAS,EAAC;AALtB;AAAA;AAAA;AAAA;AAAA,YADF,EASWjB,IAAI,CAACoB,IAThB,EAUWpB,IAAI,CAACqB,KAVhB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA3ED;;GAAMtB,I;UAGeV,W,EACDF,U,EAuDNK,W;;;KA3DRO,I;AA6EN,eAAeA,IAAf","sourcesContent":["// import package\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport LoginGithub from 'react-login-github';\r\nimport {dispatchLogin} from '../../JS/actions/actionAuth'\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\n// import axios\r\nimport axios from 'axios';\r\n\r\nconst initialState = {\r\n  email: '',\r\n  password: '',\r\n  err: '',\r\n  success: ''\r\n}\r\n\r\nconst Auth = () => {\r\n\r\n    const [user, setUser] = useState(initialState)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n\r\n\r\n  // send github token\r\n{/*const sendGithubToken = (client_id, code, client_secret) => {\r\n  axios\r\n    .post(`http://localhost:7000/api/githublogin`, {\r\n      client_id, \r\n      code,\r\n      client_secret\r\n      \r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //informParent(res);\r\n      history.push('/project')\r\n    })\r\n    .catch(error => {\r\n      console.log('GITHUB SIGNIN ERROR', error.response);\r\n    });\r\n};*/}\r\n\r\nconst githubSuccess = async(response) => {\r\n  try{  \r\n    const { \r\n       client_id, \r\n      code,\r\n      client_secret\r\n    }= response\r\n  \r\n\r\n    const res = await axios.post('http://localhost:7000/api/githublogin', { \r\n    client_id, \r\n    code,\r\n    client_secret}).then(res => {\r\n      console.log(res.data);\r\n      //informParent(res);\r\n      dispatch(dispatchLogin())\r\n    //history.push('/project')\r\n    setUser({...user, error:'', success: res.data.msg})\r\n    })\r\n    \r\n   \r\n  }catch (err) {\r\n    err.response.data.msg && \r\n    setUser({...user, err: err.response.data.msg, success: ''})\r\n}\r\n\r\n\r\n\r\n}\r\nconst githubFailure = response =>\r\n console.error(response);\r\n\r\n const auth = useSelector(state => state.auth)\r\n\r\n  return (\r\n    <div>\r\n      <LoginGithub\r\n                  clientId={`e8db77544d2e4e9ab741`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n                \r\n           ></LoginGithub>\r\n              {user.name}\r\n              {user.Login}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"module"}