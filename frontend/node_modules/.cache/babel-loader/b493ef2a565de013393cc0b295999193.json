{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Pages\\\\auth\\\\auth.js\",\n    _s = $RefreshSig$();\n\n// import package\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LoginGithub from 'react-login-github'; // import axios\n\nimport axios from 'axios'; // send github token\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst sendGithubToken = (client_id, code, client_secret) => {\n  axios.post(`http://localhost:7000/api/githublogin`, {\n    client_id,\n    code,\n    client_secret\n  }).then(res => {\n    console.log(res.data); //informParent(res);\n\n    history.push('/project');\n  }).catch(error => {\n    console.log('GITHUB SIGNIN ERROR', error.response);\n  });\n};\n\nconst githubSuccess = response => {\n  console.log(response);\n  const result = response === null || response === void 0 ? void 0 : response.profileObj;\n  const token = response === null || response === void 0 ? void 0 : response.code;\n  sendGithubToken(response.client_secret, response.code, response.client_id); //dispatch({ type: AUTH, data: { result, token } });\n};\n\nconst githubFailure = response => console.error(response);\n\nconst auth = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LoginGithub, {\n      clientId: `e8db77544d2e4e9ab741`,\n      buttonText: \"Login with Github\",\n      onSuccess: githubSuccess,\n      onFailure: githubFailure,\n      className: \"icon-github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(auth, \"lqmAIvIvrOmh+sE1XQLdONmA6v4=\", false, function () {\n  return [useDispatch, useLocation, useHistory];\n});\n\nexport default auth;","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Pages/auth/auth.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","LoginGithub","axios","sendGithubToken","client_id","code","client_secret","post","then","res","console","log","data","history","push","catch","error","response","githubSuccess","result","profileObj","token","githubFailure","auth","dispatch","location"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAA0C,OAAOC,WAAP,MAAwB,oBAAxB,C,CAE1C;;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;;;AACA,MAAMC,eAAe,GAAG,CAACC,SAAD,EAAYC,IAAZ,EAAkBC,aAAlB,KAAoC;AAC1DJ,EAAAA,KAAK,CACFK,IADH,CACS,uCADT,EACiD;AAC7CH,IAAAA,SAD6C;AAE7CC,IAAAA,IAF6C;AAG7CC,IAAAA;AAH6C,GADjD,EAOGE,IAPH,CAOQC,GAAG,IAAI;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,EADW,CAEX;;AACAC,IAAAA,OAAO,CAACC,IAAR,CAAa,UAAb;AACD,GAXH,EAYGC,KAZH,CAYSC,KAAK,IAAI;AACdN,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCK,KAAK,CAACC,QAAzC;AACD,GAdH;AAeD,CAhBD;;AAkBA,MAAMC,aAAa,GAAGD,QAAQ,IAAI;AAChCP,EAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACA,QAAME,MAAM,GAAGF,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEG,UAAzB;AACA,QAAMC,KAAK,GAAGJ,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEZ,IAAxB;AAEAF,EAAAA,eAAe,CAACc,QAAQ,CAACX,aAAV,EAAyBW,QAAQ,CAACZ,IAAlC,EAAwCY,QAAQ,CAACb,SAAjD,CAAf,CALgC,CAMhC;AAGD,CATD;;AAUA,MAAMkB,aAAa,GAAGL,QAAQ,IAC7BP,OAAO,CAACM,KAAR,CAAcC,QAAd,CADD;;AAGA,MAAMM,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGxB,WAAW,EAA5B;AACA,QAAMyB,QAAQ,GAAG1B,WAAW,EAA5B;AACA,QAAMc,OAAO,GAAGf,UAAU,EAA1B;AACA,sBACE;AAAA,2BACE,QAAC,WAAD;AACY,MAAA,QAAQ,EAAG,sBADvB;AAEY,MAAA,UAAU,EAAC,mBAFvB;AAGY,MAAA,SAAS,EAAEoB,aAHvB;AAIY,MAAA,SAAS,EAAEI,aAJvB;AAKY,MAAA,SAAS,EAAC;AALtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAhBD;;GAAMC,I;UACavB,W,EACAD,W,EACDD,U;;;AAelB,eAAeyB,IAAf","sourcesContent":["// import package\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';import LoginGithub from 'react-login-github';\r\n\r\n// import axios\r\nimport axios from 'axios';\r\n\r\n// send github token\r\nconst sendGithubToken = (client_id, code, client_secret) => {\r\n  axios\r\n    .post(`http://localhost:7000/api/githublogin`, {\r\n      client_id, \r\n      code,\r\n      client_secret\r\n      \r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //informParent(res);\r\n      history.push('/project')\r\n    })\r\n    .catch(error => {\r\n      console.log('GITHUB SIGNIN ERROR', error.response);\r\n    });\r\n};\r\n\r\nconst githubSuccess = response => {\r\n  console.log(response);\r\n  const result = response?.profileObj;\r\n  const token = response?.code;\r\n\r\n  sendGithubToken(response.client_secret, response.code, response.client_id)\r\n  //dispatch({ type: AUTH, data: { result, token } });\r\n\r\n\r\n}\r\nconst githubFailure = response =>\r\n console.error(response);\r\n\r\nconst auth = () => {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  return (\r\n    <div>\r\n      <LoginGithub\r\n                  clientId={`e8db77544d2e4e9ab741`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n                \r\n           ></LoginGithub>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default auth\r\n"]},"metadata":{},"sourceType":"module"}