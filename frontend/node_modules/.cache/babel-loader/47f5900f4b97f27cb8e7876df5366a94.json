{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Pages\\\\auth\\\\auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  name: '',\n  password: '',\n  cf_password: '',\n  err: '',\n  success: ''\n};\nexport default function Login() {\n  _s();\n\n  const [data, setData] = useState(initialState);\n  const {\n    client_id,\n    redirect_uri\n  } = data;\n  useEffect(() => {\n    // After requesting Github access, Github redirects back to your app with a code parameter\n    const url = window.location.href;\n    const hasCode = url.includes(\"?code=\"); // If Github API returns the code parameter\n\n    if (hasCode) {\n      const newUrl = url.split(\"?code=\");\n      window.history.pushState({}, null, newUrl[0]);\n      setData({ ...data,\n        isLoading: true\n      });\n      const requestData = {\n        code: newUrl[1]\n      };\n      const proxy_url = state.proxy_url; // Use code parameter and other parameters to make POST request to proxy_server\n\n      fetch(proxy_url, {\n        method: \"POST\",\n        body: JSON.stringify(requestData)\n      }).then(response => response.json()).then(data => {\n        dispatch({\n          type: \"LOGIN\",\n          payload: {\n            user: data,\n            isLoggedIn: true\n          }\n        });\n      }).catch(error => {\n        setData({\n          isLoading: false,\n          errorMessage: \"Sorry! Login failed\"\n        });\n      });\n    }\n  }, [state, dispatch, data]);\n\n  if (state.isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Super amazing app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: data.errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"login-container\",\n          children: data.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loader-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loader\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"login-link\",\n              href: `https://github.com/login/oauth/authorize?scope=user&client_id=${client_id}&redirect_uri=${redirect_uri}`,\n              onClick: () => {\n                setData({ ...data,\n                  errorMessage: \"\"\n                });\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Login with GitHub\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this)\n          }, void 0, false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"EDyOj9y54MnR81NlJUdHFTEAg0Y=\");\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Pages/auth/auth.js"],"names":["React","useState","useEffect","useContext","Redirect","initialState","name","password","cf_password","err","success","Login","data","setData","client_id","redirect_uri","url","window","location","href","hasCode","includes","newUrl","split","history","pushState","isLoading","requestData","code","proxy_url","state","fetch","method","body","JSON","stringify","then","response","json","dispatch","type","payload","user","isLoggedIn","catch","error","errorMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst initialState = {\r\n  name: '',\r\n  password: '',\r\n  cf_password: '',\r\n  err: '',\r\n  success: ''\r\n}\r\n\r\n\r\n\r\nexport default function Login() {\r\n  const [data, setData] = useState(initialState)\r\n\r\n  const { client_id, redirect_uri } = data;\r\n\r\n  useEffect(() => {\r\n    // After requesting Github access, Github redirects back to your app with a code parameter\r\n    const url = window.location.href;\r\n    const hasCode = url.includes(\"?code=\");\r\n\r\n    // If Github API returns the code parameter\r\n    if (hasCode) {\r\n      const newUrl = url.split(\"?code=\");\r\n      window.history.pushState({}, null, newUrl[0]);\r\n      setData({ ...data, isLoading: true });\r\n\r\n      const requestData = {\r\n        code: newUrl[1]\r\n      };\r\n\r\n      const proxy_url = state.proxy_url;\r\n\r\n      // Use code parameter and other parameters to make POST request to proxy_server\r\n      fetch(proxy_url, {\r\n        method: \"POST\",\r\n        body: JSON.stringify(requestData)\r\n      })\r\n        .then(response => response.json())\r\n        .then(data => {\r\n          dispatch({\r\n            type: \"LOGIN\",\r\n            payload: { user: data, isLoggedIn: true }\r\n          });\r\n        })\r\n        .catch(error => {\r\n          setData({\r\n            isLoading: false,\r\n            errorMessage: \"Sorry! Login failed\"\r\n          });\r\n        });\r\n    }\r\n  }, [state, dispatch, data]);\r\n\r\n  if (state.isLoggedIn) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <section className=\"container\">\r\n        <div>\r\n          <h1>Welcome</h1>\r\n          <span>Super amazing app</span>\r\n          <span>{data.errorMessage}</span>\r\n          <div className=\"login-container\">\r\n            {data.isLoading ? (\r\n              <div className=\"loader-container\">\r\n                <div className=\"loader\"></div>\r\n              </div>\r\n            ) : (\r\n              <>\r\n                {\r\n                  // Link to request GitHub access\r\n                }\r\n                <a\r\n                  className=\"login-link\"\r\n                  href={`https://github.com/login/oauth/authorize?scope=user&client_id=${client_id}&redirect_uri=${redirect_uri}`}\r\n                  onClick={() => {\r\n                    setData({ ...data, errorMessage: \"\" });\r\n                  }}\r\n                >\r\n                \r\n                  <span>Login with GitHub</span>\r\n                </a>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </Wrapper>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}