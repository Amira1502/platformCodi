{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\n// Ã¯mport package react\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport { toast } from 'react-toast';\nimport { AUTH } from '../../JS/actionsTypes/actionAuth';\nimport { dispatchLogin, dispatchGetUser } from '../../JS/actions/actionAuth'; // import google & github login \n\nimport { GoogleLogin } from 'react-google-login';\nimport LoginGithub from 'react-login-github'; // import axios\n\nimport axios from 'axios';\nimport { authenticate, isAuth } from '../../helpers/auth';\nimport { LOGOUT } from '../../JS/actionsTypes/actionAuth'; // import CSS\n\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport './Navbar.css';\nimport useStyles from './styles'; // import logo\n\nimport logo from \"../../Assets/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.setItem('profile')));\n  console.log(user);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles(); // send google token\n\n  const sendGoogleToken = tokenId => {\n    axios.post(`http://localhost:7000/api/googlelogin`, {\n      idToken: tokenId\n    }).then(res => {\n      console.log(res.data);\n      history.push('/project');\n    }).catch(error => {\n      console.log('GOOGLE SIGNIN ERROR', error.response);\n    });\n  };\n\n  const informParent = response => {\n    authenticate(response, () => {\n      isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/private');\n    });\n  }; // send github token\n\n\n  const sendGithubToken = (client_id, code, client_secret) => {\n    axios.post(`http://localhost:7000/api/githublogin`, {\n      client_id,\n      code,\n      client_secret\n    }).then(res => {\n      console.log(res.data); //informParent(res);\n\n      history.push('/project');\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  }; // handle google\n\n\n  const responseGoogle = response => {\n    const result = response === null || response === void 0 ? void 0 : response.profileObj;\n    const token = response === null || response === void 0 ? void 0 : response.tokenId;\n    console.log(response);\n    sendGoogleToken(response.tokenId);\n    dispatch({\n      type: AUTH,\n      data: {\n        result,\n        token\n      }\n    });\n  };\n\n  const githubSuccess = async response => {\n    console.log(response); //const result = response?.profileObj\n    //const token = response?.access_token;\n\n    try {\n      //sendGithubToken(response.client_secret, response.code, response.client_id)\n      const {\n        client_id,\n        code,\n        client_secret\n      } = response;\n      console.log(response);\n      const res = await axios.post(`http://localhost:7000/api/githublogin`, {\n        client_id,\n        code,\n        client_secret\n      });\n      setUser({ ...user,\n        error: '',\n        success: res.data.msg\n      });\n      console.log(res); //dispatch(dispatchLogin())\n\n      dispatch(dispatchGetUser(res));\n      history.push('/project');\n    } catch (err) {\n      err.response.data.msg && setUser({ ...user,\n        err: err.response.data.msg,\n        success: ''\n      });\n    }\n  };\n\n  const githubFailure = response => console.error(response);\n\n  const logout = () => {\n    localStorage.clear();\n    history.push('/');\n    setUser(null);\n  };\n\n  useEffect(() => {\n    const firstLogin = localStorage.getItem('firstLogin');\n\n    if (firstLogin) {\n      const getUser = () => {\n        dispatch(dispatchGetUser());\n      };\n\n      getUser();\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          className: classes.toolbar,\n          children: user ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profile,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.purple,\n              alt: user.name,\n              src: user.avatar_url,\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.userName,\n              variant: \"h6\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: classes.logout,\n              color: \"secondary\",\n              onClick: logout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(LoginGithub, {\n            clientId: `e8db77544d2e4e9ab741`,\n            buttonText: \"Login with Github\",\n            onSuccess: githubSuccess,\n            onFailure: githubFailure,\n            className: \"icon-github\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"q5gz5MbBv7XcRS07j5ihb6RAHaE=\", false, function () {\n  return [useDispatch, useLocation, useHistory, useStyles];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Components/Navbar/Navbar.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","decode","toast","AUTH","dispatchLogin","dispatchGetUser","GoogleLogin","LoginGithub","axios","authenticate","isAuth","LOGOUT","AppBar","Typography","Toolbar","Avatar","Button","useStyles","logo","Navbar","user","setUser","JSON","parse","localStorage","setItem","console","log","dispatch","location","history","classes","sendGoogleToken","tokenId","post","idToken","then","res","data","push","catch","error","response","informParent","role","sendGithubToken","client_id","code","client_secret","responseGoogle","result","profileObj","token","type","githubSuccess","success","msg","err","githubFailure","logout","clear","firstLogin","getItem","getUser","toolbar","profile","purple","name","avatar_url","userName"],"mappings":"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","sourcesContent":["// Ã¯mport package react\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport { toast } from 'react-toast'\r\nimport { AUTH } from '../../JS/actionsTypes/actionAuth';\r\nimport {dispatchLogin,  dispatchGetUser} from '../../JS/actions/actionAuth'\r\n\r\n\r\n\r\n\r\n\r\n// import google & github login \r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LoginGithub from 'react-login-github';\r\n\r\n\r\n// import axios\r\nimport axios from 'axios';\r\n\r\nimport { authenticate, isAuth } from '../../helpers/auth';\r\nimport {LOGOUT} from '../../JS/actionsTypes/actionAuth';\r\n\r\n\r\n// import CSS\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core'\r\nimport './Navbar.css'\r\nimport useStyles from './styles';\r\n\r\n// import logo\r\nimport logo from \"../../Assets/logo.png\"\r\n\r\nconst Navbar =  ()  => {\r\n\r\n  const [user, setUser] = useState(JSON.parse(localStorage.setItem('profile')));\r\n console.log(user)\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  // send google token\r\n  const sendGoogleToken = tokenId => {\r\n    axios\r\n      .post(`http://localhost:7000/api/googlelogin`, {\r\n        idToken: tokenId\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        history.push('/project')\r\n      })\r\n      .catch(error => {\r\n        console.log('GOOGLE SIGNIN ERROR', error.response);\r\n      });\r\n  };\r\n  const informParent = response => {\r\n    authenticate(response, () => {\r\n      isAuth() && isAuth().role === 'admin'\r\n        ? history.push('/admin')\r\n        : history.push('/private');\r\n    });\r\n  };\r\n\r\n// send github token\r\nconst sendGithubToken = (client_id, code, client_secret) => {\r\n  axios\r\n    .post(`http://localhost:7000/api/githublogin`, {\r\n      client_id, \r\n      code,\r\n      client_secret\r\n      \r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //informParent(res);\r\n      history.push('/project')\r\n    })\r\n    .catch(error => {\r\n      console.log('GITHUB SIGNIN ERROR', error.response);\r\n    });\r\n};\r\n      // handle google\r\n      const responseGoogle = response => {\r\n        const result = response?.profileObj;\r\n    const token = response?.tokenId;\r\n        console.log(response);\r\n        sendGoogleToken(response.tokenId);\r\n        dispatch({ type: AUTH, data: { result, token } });\r\n\r\n      };\r\n    \r\n\r\n\r\n      const githubSuccess = async(response) => {\r\n        console.log(response);\r\n        //const result = response?.profileObj\r\n        //const token = response?.access_token;\r\n\r\n      try    {\r\n      //sendGithubToken(response.client_secret, response.code, response.client_id)\r\n      const {  client_id, code, client_secret} = response\r\n      console.log(response)\r\n\r\n      const res = await axios.post(`http://localhost:7000/api/githublogin`, {  client_id, code, client_secret} )\r\n\r\n      setUser({...user, error:'', success: res.data.msg})\r\n      console.log(res)\r\n      //dispatch(dispatchLogin())\r\n      dispatch(dispatchGetUser(res))\r\n\r\n\r\n\r\n      history.push('/project')\r\n\r\n\r\n      \r\n       } catch (err) {\r\n        err.response.data.msg && \r\n        setUser({...user, err: err.response.data.msg, success: ''})\r\n    }\r\n      \r\n      }\r\n      const githubFailure = response =>\r\n       console.error(response);\r\n\r\n       \r\n  const logout = () => {\r\n    localStorage.clear();\r\n\r\n    history.push('/');\r\n\r\n    setUser(null);\r\n  };\r\n\r\n\r\n       useEffect(() => {\r\n        const firstLogin = localStorage.getItem('firstLogin')\r\n        if(firstLogin){\r\n          const getUser = () => {\r\n            dispatch(dispatchGetUser())\r\n          }\r\n          getUser()\r\n        }\r\n        \r\n      })\r\n\r\n\r\n    return (\r\n        <div>\r\n      <AppBar color=\"white\">\r\n {/*logo */}\r\n  <img  src={logo} alt=\"logo\" className=\"logo\"></img>\r\n\r\n {/*button signin  logout */}\r\n <div className='buttons'>\r\n\r\n <Toolbar className={classes.toolbar}>\r\n        {user? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user.name} src={user.avatar_url}>{user.name}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n        <LoginGithub\r\n                  clientId={`e8db77544d2e4e9ab741`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n                \r\n           ></LoginGithub>\r\n\r\n\r\n     )}\r\n      </Toolbar>\r\n \r\n       \r\n        </div> \r\n       \r\n          \r\n\r\n\r\n        </AppBar> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}