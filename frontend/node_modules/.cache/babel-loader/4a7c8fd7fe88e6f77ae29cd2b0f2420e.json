{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Pages\\\\auth\\\\auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LoginGithub from 'react-login-github';\nimport { AUTH } from '../../JS/actionsTypes/actionAuth'; // import axios\n\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  console.log(user);\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory(); // send github token\n\n  const sendGithubToken = (client_id, code, client_secret) => {\n    axios.post(`http://localhost:7000/api/githublogin`, {\n      client_id,\n      code,\n      client_secret\n    }).then(res => {\n      console.log(res.data); //informParent(res);\n\n      history.push('/project');\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  };\n\n  const githubSuccess = response => {\n    console.log(response);\n    const result = response === null || response === void 0 ? void 0 : response.profileObj;\n    const token = response === null || response === void 0 ? void 0 : response.code;\n    sendGithubToken(response.client_secret, response.code, response.client_id);\n    dispatch({\n      type: AUTH,\n      data: {\n        result,\n        token\n      }\n    });\n  };\n\n  const githubFailure = response => console.error(response);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"auth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoginGithub, {\n      clientId: `e8db77544d2e4e9ab741`,\n      buttonText: \"Login with Github\",\n      onSuccess: githubSuccess,\n      onFailure: githubFailure,\n      className: \"icon-github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"kPVSHqAu5L2j3QlfU0CGuOpKrkY=\", false, function () {\n  return [useDispatch, useLocation, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Pages/auth/auth.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","LoginGithub","AUTH","axios","Auth","user","setUser","JSON","parse","localStorage","getItem","console","log","dispatch","location","history","sendGithubToken","client_id","code","client_secret","post","then","res","data","push","catch","error","response","githubSuccess","result","profileObj","token","type","githubFailure"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,QAA+C,kBAA/C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,SAASC,IAAT,QAAqB,kCAArB,C,CAGA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAACY,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAD,CAAhC;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACC,QAAMQ,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,OAAO,GAAGjB,UAAU,EAA1B,CALc,CAQnB;;AACA,QAAMkB,eAAe,GAAG,CAACC,SAAD,EAAYC,IAAZ,EAAkBC,aAAlB,KAAoC;AACxDhB,IAAAA,KAAK,CACFiB,IADH,CACS,uCADT,EACiD;AAC7CH,MAAAA,SAD6C;AAE7CC,MAAAA,IAF6C;AAG7CC,MAAAA;AAH6C,KADjD,EAOGE,IAPH,CAOQC,GAAG,IAAI;AACXX,MAAAA,OAAO,CAACC,GAAR,CAAYU,GAAG,CAACC,IAAhB,EADW,CAEX;;AACAR,MAAAA,OAAO,CAACS,IAAR,CAAa,UAAb;AACD,KAXH,EAYGC,KAZH,CAYSC,KAAK,IAAI;AACdf,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCc,KAAK,CAACC,QAAzC;AACD,KAdH;AAeD,GAhBH;;AAkBA,QAAMC,aAAa,GAAGD,QAAQ,IAAI;AAC9BhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,QAAZ;AACA,UAAME,MAAM,GAAGF,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAEG,UAAzB;AACA,UAAMC,KAAK,GAAGJ,QAAH,aAAGA,QAAH,uBAAGA,QAAQ,CAAET,IAAxB;AAEAF,IAAAA,eAAe,CAACW,QAAQ,CAACR,aAAV,EAAyBQ,QAAQ,CAACT,IAAlC,EAAwCS,QAAQ,CAACV,SAAjD,CAAf;AACAJ,IAAAA,QAAQ,CAAC;AAAEmB,MAAAA,IAAI,EAAE9B,IAAR;AAAcqB,MAAAA,IAAI,EAAE;AAAEM,QAAAA,MAAF;AAAUE,QAAAA;AAAV;AAApB,KAAD,CAAR;AAGD,GATH;;AAUE,QAAME,aAAa,GAAGN,QAAQ,IAC7BhB,OAAO,CAACe,KAAR,CAAcC,QAAd,CADD;;AAEE,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,WAAD;AACM,MAAA,QAAQ,EAAG,sBADjB;AAEM,MAAA,UAAU,EAAC,mBAFjB;AAGM,MAAA,SAAS,EAAEC,aAHjB;AAIM,MAAA,SAAS,EAAEK,aAJjB;AAKM,MAAA,SAAS,EAAC;AALhB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CApDD;;GAAM7B,I;UAGgBJ,W,EACAD,W,EACDD,U;;;KALfM,I;AAsDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport LoginGithub from 'react-login-github';\r\nimport { AUTH } from '../../JS/actionsTypes/actionAuth';\r\n\r\n\r\n// import axios\r\nimport axios from 'axios';\r\nconst Auth = () => {\r\n    const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n    console.log(user)\r\n     const dispatch = useDispatch();\r\n     const location = useLocation();\r\n     const history = useHistory();\r\n     \r\n    \r\n// send github token\r\nconst sendGithubToken = (client_id, code, client_secret) => {\r\n    axios\r\n      .post(`http://localhost:7000/api/githublogin`, {\r\n        client_id, \r\n        code,\r\n        client_secret\r\n        \r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        //informParent(res);\r\n        history.push('/project')\r\n      })\r\n      .catch(error => {\r\n        console.log('GITHUB SIGNIN ERROR', error.response);\r\n      });\r\n  };\r\n  \r\nconst githubSuccess = response => {\r\n    console.log(response);\r\n    const result = response?.profileObj;\r\n    const token = response?.code;\r\n  \r\n    sendGithubToken(response.client_secret, response.code, response.client_id)\r\n    dispatch({ type: AUTH, data: { result, token } });\r\n  \r\n  \r\n  }\r\n  const githubFailure = response =>\r\n   console.error(response);\r\n    return (\r\n        <div>\r\n            <h1>auth</h1>\r\n            <LoginGithub\r\n                  clientId={`e8db77544d2e4e9ab741`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n                \r\n           ></LoginGithub>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"module"}