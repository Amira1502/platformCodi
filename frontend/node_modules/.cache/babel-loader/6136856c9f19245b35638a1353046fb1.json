{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Components\\\\Navbar\\\\Navbar.js\",\n    _s = $RefreshSig$();\n\n// Ã¯mport package react\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport decode from 'jwt-decode';\nimport { toast } from 'react-toast'; // import google & github login \n\nimport { GoogleLogin } from 'react-google-login';\nimport LoginGithub from 'react-login-github'; // import axios\n\nimport axios from 'axios';\nimport { authenticate, isAuth } from '../../helpers/auth';\nimport { LOGOUT } from '../../JS/actionsTypes/actionAuth'; // import CSS\n\nimport { AppBar, Typography, Toolbar, IconButton, Avatar, Button, Menu, MenuItem } from '@material-ui/core';\nimport './Navbar.css';\nimport useStyles from './styles'; // import logo\n\nimport logo from \"../../Assets/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Navbar = () => {\n  _s();\n\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n  const classes = useStyles(); // send google token\n\n  const sendGoogleToken = tokenId => {\n    axios.post(`http://localhost:7000/auth/googlelogin`, {\n      idToken: tokenId\n    }).then(res => {\n      console.log(res.data); //informParent(res);\n\n      history.push('/project');\n    }).catch(error => {\n      toast.error('GOOGLE SIGNIN ERROR', error.response);\n    });\n  }; // send github token\n\n\n  const sendGithubToken = (clientID, requestToken, clientSecret) => {\n    axios.post(`${process.env.REACT_APP_API_URL}/githublogin`, {\n      clientID,\n      clientSecret,\n      requestToken\n    }).then(res => {\n      console.log(res.data);\n      informParent(res);\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  };\n\n  const informParent = response => {\n    authenticate(response, () => {\n      isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/profile');\n    });\n  }; // handle google\n\n\n  const responseGoogle = response => {\n    console.log(response);\n    sendGoogleToken(response.tokenId);\n  };\n\n  const githubSuccess = response => {\n    console.log(response);\n    sendGithubToken(response.clientID, response.requestToken, response.clientSecret);\n  };\n\n  const githubFailure = response => console.error(response);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"white\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Toolbar, {\n          className: classes.toolbar,\n          children: (user === null || user === void 0 ? void 0 : user.result) ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.profile,\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              className: classes.purple,\n              alt: user === null || user === void 0 ? void 0 : user.result.name,\n              src: user === null || user === void 0 ? void 0 : user.result.imageUrl,\n              children: user === null || user === void 0 ? void 0 : user.result.name.charAt(0)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.userName,\n              variant: \"h6\",\n              children: user === null || user === void 0 ? void 0 : user.result.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              className: classes.logout,\n              color: \"secondary\",\n              onClick: logout,\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 11\n          }, this) : /*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 2\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: `${process.env.REACT_APP_GOOGLE_CLIENT}`,\n          buttonText: \"Login\",\n          onSuccess: responseGoogle,\n          onFailure: responseGoogle,\n          cookiePolicy: 'single_host_origin'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Navbar, \"xZhL9ilEDGqtfdTyzje0gDJ8X7M=\", false, function () {\n  return [useDispatch, useLocation, useHistory, useStyles];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Components/Navbar/Navbar.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","decode","toast","GoogleLogin","LoginGithub","axios","authenticate","isAuth","LOGOUT","AppBar","Typography","Toolbar","IconButton","Avatar","Button","Menu","MenuItem","useStyles","logo","Navbar","user","setUser","JSON","parse","localStorage","getItem","dispatch","location","history","classes","sendGoogleToken","tokenId","post","idToken","then","res","console","log","data","push","catch","error","response","sendGithubToken","clientID","requestToken","clientSecret","process","env","REACT_APP_API_URL","informParent","role","responseGoogle","githubSuccess","githubFailure","toolbar","result","profile","purple","name","imageUrl","charAt","userName","logout","REACT_APP_GOOGLE_CLIENT"],"mappings":"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","sourcesContent":["// Ã¯mport package react\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport decode from 'jwt-decode';\r\nimport { toast } from 'react-toast'\r\n\r\n\r\n\r\n\r\n// import google & github login \r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LoginGithub from 'react-login-github';\r\n\r\n\r\n// import axios\r\nimport axios from 'axios';\r\n\r\nimport { authenticate, isAuth } from '../../helpers/auth';\r\nimport {LOGOUT} from '../../JS/actionsTypes/actionAuth';\r\n\r\n\r\n// import CSS\r\nimport { AppBar, Typography, Toolbar, IconButton, Avatar, Button, Menu, MenuItem } from '@material-ui/core';\r\nimport './Navbar.css'\r\nimport useStyles from './styles';\r\n\r\n// import logo\r\nimport logo from \"../../Assets/logo.png\"\r\n\r\nconst Navbar =  ()  => {\r\n\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem('profile')));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n\r\n\r\n  // send google token\r\n    const sendGoogleToken = tokenId => {\r\n        axios\r\n          .post(`http://localhost:7000/auth/googlelogin`, {\r\n            idToken: tokenId\r\n          })\r\n          .then(res => {\r\n            console.log(res.data);\r\n            //informParent(res);\r\n            history.push('/project');\r\n\r\n          })\r\n          .catch(error => {\r\n            toast.error('GOOGLE SIGNIN ERROR', error.response);\r\n          });\r\n      };\r\n\r\n// send github token\r\n      const sendGithubToken = (clientID, requestToken, clientSecret) => {\r\n        axios\r\n          .post(`${process.env.REACT_APP_API_URL}/githublogin`, {\r\n            clientID, \r\n            clientSecret,\r\n            requestToken,\r\n            \r\n          })\r\n          .then(res => {\r\n            console.log(res.data);\r\n            informParent(res);\r\n          })\r\n          .catch(error => {\r\n            console.log('GITHUB SIGNIN ERROR', error.response);\r\n          });\r\n      };\r\n\r\n      const informParent = response => {\r\n        authenticate(response, () => {\r\n          isAuth() && isAuth().role === 'admin'\r\n            ? history.push('/admin')\r\n            : history.push('/profile');\r\n        });\r\n      };\r\n\r\n      // handle google\r\n      const responseGoogle = response => {\r\n        console.log(response);\r\n        sendGoogleToken(response.tokenId);\r\n      };\r\n\r\n      const githubSuccess = response => {\r\n        console.log(response);\r\n\r\n        sendGithubToken(response.clientID, response.requestToken, response.clientSecret)\r\n\r\n      }\r\n      const githubFailure = response =>\r\n       console.error(response);\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n      <AppBar color=\"white\">\r\n {/*logo */}\r\n  <img  src={logo} alt=\"logo\" className=\"logo\"></img>\r\n\r\n {/*button signin  logout */}\r\n <div className='buttons'>\r\n <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar className={classes.purple} alt={user?.result.name} src={user?.result.imageUrl}>{user?.result.name.charAt(0)}</Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">{user?.result.name}</Typography>\r\n            <Button variant=\"contained\" className={classes.logout} color=\"secondary\" onClick={logout}>Logout</Button>\r\n          </div>\r\n        ) : (\r\n          <Button component={Link} to=\"/\" variant=\"contained\" color=\"primary\">Sign In</Button>\r\n        )}\r\n      </Toolbar>\r\n\r\n          <GoogleLogin\r\n          clientId={`${process.env.REACT_APP_GOOGLE_CLIENT}`}\r\n          buttonText=\"Login\"\r\n          onSuccess={responseGoogle}\r\n          onFailure={responseGoogle}\r\n          cookiePolicy={'single_host_origin'}\r\n        />   \r\n       \r\n        </div> \r\n       \r\n           {/* <LoginGithub\r\n                  clientId={`${process.env.REACT_APP_GITHUB_CLIENT}`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n            ></LoginGithub>*/}\r\n\r\n\r\n        </AppBar> \r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n"]},"metadata":{},"sourceType":"module"}