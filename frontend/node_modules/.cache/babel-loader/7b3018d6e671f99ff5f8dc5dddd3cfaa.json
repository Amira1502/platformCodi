{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Pages\\\\auth\\\\auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LoginGithub from 'react-login-github';\nimport { AUTH } from '../../JS/actionsTypes/actionAuth'; // import axios\n\nimport axios from 'axios';\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const logout = () => {\n    localStorage.clear();\n    history.push('/');\n    setUser(null);\n  }; // send github token\n\n\n  const sendGithubToken = (client_id, code, client_secret) => {\n    axios.post(`http://localhost:7000/api/githublogin`, {\n      client_id,\n      code,\n      client_secret\n    }).then(res => {\n      console.log(res.data); //informParent(res);\n\n      history.push('/project');\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  };\n\n  const githubSuccess = response => {\n    console.log(response);\n    const result = response === null || response === void 0 ? void 0 : response.profileObj;\n    const token = response === null || response === void 0 ? void 0 : response.code;\n    sendGithubToken(response.client_secret, response.code, response.client_id);\n    dispatch({\n      type: AUTH,\n      data: {\n        result,\n        token\n      }\n    });\n  };\n\n  const githubFailure = response => console.error(response);\n\n  const user = {\n    avatar_url,\n    name,\n    public_repos,\n    followers,\n    following\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"auth\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      component: Link,\n      to: \"/project\",\n      variant: \"contained\",\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(LoginGithub, {\n        clientId: `e8db77544d2e4e9ab741`,\n        buttonText: \"Login with Github\",\n        onSuccess: githubSuccess,\n        onFailure: githubFailure,\n        className: \"icon-github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: avatar_url,\n        alt: \"Avatar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [public_repos, \" Repos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [followers, \" Followers\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [following, \" Following\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Auth, \"lqmAIvIvrOmh+sE1XQLdONmA6v4=\", false, function () {\n  return [useDispatch, useLocation, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Pages/auth/auth.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","LoginGithub","AUTH","axios","AppBar","Typography","Toolbar","Avatar","Button","Auth","dispatch","location","history","logout","localStorage","clear","push","setUser","sendGithubToken","client_id","code","client_secret","post","then","res","console","log","data","catch","error","response","githubSuccess","result","profileObj","token","type","githubFailure","user","avatar_url","name","public_repos","followers","following"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport LoginGithub from 'react-login-github';\r\nimport { AUTH } from '../../JS/actionsTypes/actionAuth';\r\n\r\n\r\n// import axios\r\nimport axios from 'axios';\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from '@material-ui/core'\r\n\r\nconst Auth = () => {\r\n     const dispatch = useDispatch();\r\n     const location = useLocation();\r\n     const history = useHistory();\r\n     \r\n     const logout = () => {\r\n        localStorage.clear();\r\n    \r\n        history.push('/');\r\n    \r\n        setUser(null);\r\n      };\r\n// send github token\r\nconst sendGithubToken = (client_id, code, client_secret) => {\r\n    axios\r\n      .post(`http://localhost:7000/api/githublogin`, {\r\n        client_id, \r\n        code,\r\n        client_secret\r\n        \r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        //informParent(res);\r\n        history.push('/project')\r\n      })\r\n      .catch(error => {\r\n        console.log('GITHUB SIGNIN ERROR', error.response);\r\n      });\r\n  };\r\n  \r\nconst githubSuccess = response => {\r\n    console.log(response);\r\n    const result = response?.profileObj;\r\n    const token = response?.code;\r\n  \r\n    sendGithubToken(response.client_secret, response.code, response.client_id)\r\n    dispatch({ type: AUTH, data: { result, token } });\r\n  \r\n  \r\n  }\r\n  const githubFailure = response =>\r\n   console.error(response);\r\n   const  user = { avatar_url, name, public_repos, followers, following }\r\n\r\n    return (\r\n        <div>\r\n            <h1>auth</h1>\r\n        \r\n          <Button component={Link} to=\"/project\" variant=\"contained\" color=\"primary\">\r\n         <LoginGithub\r\n                  clientId={`e8db77544d2e4e9ab741`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n                \r\n           ></LoginGithub> \r\n\r\n  </Button>\r\n\r\n\r\n  <div className=\"content\">\r\n      \r\n            <img src={avatar_url} alt=\"Avatar\"/>\r\n            <span>{name}</span>\r\n            <span>{public_repos} Repos</span>\r\n            <span>{followers} Followers</span>\r\n            <span>{following} Following</span>\r\n          </div>\r\n \r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"module"}