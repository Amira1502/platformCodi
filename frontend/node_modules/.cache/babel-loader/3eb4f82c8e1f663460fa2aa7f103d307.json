{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amira\\\\Desktop\\\\codiPlatform\\\\app\\\\frontend\\\\src\\\\Pages\\\\Auth\\\\Auth.js\",\n    _s = $RefreshSig$();\n\n// Ã¯mport package react\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { useDispatch } from 'react-redux'; // import google & github login \n\nimport { GoogleLogin } from 'react-google-login';\nimport LoginGithub from 'react-login-github'; // import helper\n\nimport { authenticate, isAuth } from '../../helpers/auth';\nimport { AUTH } from '../../JS/actionsTypes/actionAuth'; // import axios\n\nimport axios from 'axios'; // import CSS\n\nimport Card from '@mui/material/Card';\nimport './Auth.css';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core'; // import logo\n\nimport logo from \"../../Assets/logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const history = useHistory(); // send google token\n\n  const sendGoogleToken = tokenId => {\n    axios.post(`http://localhost:7000/api/googlelogin`, {\n      idToken: tokenId\n    }).then(res => {\n      console.log(res.data);\n      history.push('/project');\n    }).catch(error => {\n      console.log('GOOGLE SIGNIN ERROR', error.response);\n    });\n  };\n\n  const informParent = response => {\n    authenticate(response, () => {\n      isAuth() && isAuth().role === 'admin' ? history.push('/admin') : history.push('/private');\n    });\n  }; // send github token\n\n\n  const sendGithubToken = (client_id, code, client_secret) => {\n    axios.post(`http://localhost:7000/api/githublogin`, {\n      client_id,\n      code,\n      client_secret\n    }).then(res => {\n      console.log(res.data); //informParent(res);\n    }).catch(error => {\n      console.log('GITHUB SIGNIN ERROR', error.response);\n    });\n  }; // handle google\n\n\n  const googleSuccess = response => {\n    const result = response === null || response === void 0 ? void 0 : response.profileObj;\n    const token = response === null || response === void 0 ? void 0 : response.tokenId;\n    console.log(response);\n    sendGoogleToken(response.tokenId);\n    dispatch({\n      type: AUTH,\n      data: {\n        result,\n        token\n      }\n    });\n  };\n\n  const googleError = () => alert('Google Sign In was unsuccessful. Try again later'); // handle Github\n\n\n  const githubSuccess = async response => {\n    try {\n      const {\n        client_secret,\n        code,\n        client_id\n      } = response;\n      const res = await axios.post(`http://localhost:7000/api/githublogin`, {\n        client_secret,\n        code,\n        client_id\n      }); //sendGithubToken(response.client_secret, response.code, response.client_id)\n      //console.log(res)\n\n      const result = res.data;\n      console.log(result);\n      const token = response === null || response === void 0 ? void 0 : response.token;\n      dispatch({\n        type: AUTH,\n        data: {\n          result,\n          token\n        }\n      });\n      history.push('/project');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const githubFailure = response => alert('Github Sign In was unsuccessful. Try again later');\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        alt: \"logo\",\n        className: \"logo-auth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Welcome to EarnCoin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Log in to your account :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n                clientId: \"998922049920-3bhfhk05ff2nb9ivp1h811hhin6ilkgk.apps.googleusercontent.com\",\n                onSuccess: googleSuccess,\n                onFailure: googleError,\n                cookiePolicy: \"single_host_origin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(LoginGithub, {\n          clientId: `e8db77544d2e4e9ab741`,\n          buttonText: \"Login with Github\",\n          onSuccess: githubSuccess,\n          onFailure: githubFailure,\n          className: \"icon-github\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"FxNkVwM1QRg2/kU3+RDi4ll7EAM=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["C:/Users/Amira/Desktop/codiPlatform/app/frontend/src/Pages/Auth/Auth.js"],"names":["React","useState","useEffect","Link","useHistory","useLocation","useDispatch","GoogleLogin","LoginGithub","authenticate","isAuth","AUTH","axios","Card","Avatar","Button","Paper","Grid","Typography","Container","logo","Auth","dispatch","history","sendGoogleToken","tokenId","post","idToken","then","res","console","log","data","push","catch","error","response","informParent","role","sendGithubToken","client_id","code","client_secret","googleSuccess","result","profileObj","token","type","googleError","alert","githubSuccess","githubFailure"],"mappings":"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","sourcesContent":["// Ã¯mport package react\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link , useHistory, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// import google & github login \r\nimport { GoogleLogin } from 'react-google-login';\r\nimport LoginGithub from 'react-login-github';\r\n\r\n// import helper\r\nimport { authenticate, isAuth } from '../../helpers/auth';\r\n\r\nimport { AUTH } from '../../JS/actionsTypes/actionAuth';\r\n\r\n\r\n// import axios\r\nimport axios from 'axios';\r\n\r\n// import CSS\r\nimport Card from '@mui/material/Card';\r\nimport './Auth.css'\r\n\r\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\r\n\r\n// import logo\r\nimport logo from \"../../Assets/logo.png\"\r\n\r\n\r\n\r\nconst Auth = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // send google token\r\n  const sendGoogleToken = tokenId => {\r\n    axios\r\n      .post(`http://localhost:7000/api/googlelogin`, {\r\n        idToken: tokenId\r\n      })\r\n      .then(res => {\r\n        console.log(res.data);\r\n        history.push('/project')\r\n      })\r\n      .catch(error => {\r\n        console.log('GOOGLE SIGNIN ERROR', error.response);\r\n      });\r\n  };\r\n  const informParent = response => {\r\n    authenticate(response, () => {\r\n      isAuth() && isAuth().role === 'admin'\r\n        ? history.push('/admin')\r\n        : history.push('/private');\r\n    });\r\n  };\r\n\r\n// send github token\r\nconst sendGithubToken = (client_id, code, client_secret) => {\r\n  axios\r\n    .post(`http://localhost:7000/api/githublogin`, {\r\n      client_id, \r\n      code,\r\n      client_secret\r\n      \r\n    })\r\n    .then(res => {\r\n      console.log(res.data);\r\n      //informParent(res);\r\n    })\r\n    .catch(error => {\r\n      console.log('GITHUB SIGNIN ERROR', error.response);\r\n    });\r\n};\r\n      // handle google\r\n    const googleSuccess = response => {\r\n    const result = response?.profileObj;\r\n    const token = response?.tokenId;\r\n        console.log(response);\r\n        sendGoogleToken(response.tokenId);\r\n        dispatch({ type: AUTH, data: { result, token } });\r\n\r\n      };\r\n\r\n    const googleError = () => \r\n     alert('Google Sign In was unsuccessful. Try again later');\r\n\r\n\r\n\r\n     // handle Github\r\n      const githubSuccess = async(response) => {\r\n        try{\r\n            const { client_secret, code, client_id} = response\r\n            const res = await axios.post(`http://localhost:7000/api/githublogin`, \r\n            {client_secret, code, client_id})\r\n          //sendGithubToken(response.client_secret, response.code, response.client_id)\r\n//console.log(res)\r\n          const result =res.data;\r\n          console.log(result)\r\n\r\n  \r\n          const token = response?.token;\r\n\r\n          dispatch({ type: AUTH, data: { result, token } })\r\n\r\n          history.push('/project')\r\n        \r\n        }\r\n        catch (error) {\r\n          console.log(error);\r\n      }\r\n      }\r\n      const githubFailure = response =>\r\n      alert('Github Sign In was unsuccessful. Try again later');\r\n\r\n\r\n  return (\r\n\r\n    <div>\r\n      <Card  className=\"auth-card\">\r\n {/*logo */}\r\n <img  src={logo} alt=\"logo\" className=\"logo-auth\"></img>\r\n      <h2>Welcome to EarnCoin</h2>\r\n      <span>\r\n\r\n      <h4>Log in to your account :</h4>\r\n      <Grid container justify=\"flex-end\">\r\n            <Grid item>\r\n              <Button>\r\n              <GoogleLogin\r\n          clientId=\"998922049920-3bhfhk05ff2nb9ivp1h811hhin6ilkgk.apps.googleusercontent.com\"\r\n          onSuccess={googleSuccess}\r\n          onFailure={googleError}\r\n          cookiePolicy=\"single_host_origin\"\r\n          />\r\n              </Button>\r\n       \r\n            </Grid>\r\n            </Grid>\r\n\r\n<h3>Or</h3>\r\n\r\n<LoginGithub\r\n                  clientId={`e8db77544d2e4e9ab741`}\r\n                  buttonText=\"Login with Github\"\r\n                  onSuccess={githubSuccess}\r\n                  onFailure={githubFailure}\r\n                  className=\"icon-github\"\r\n                \r\n           ></LoginGithub>\r\n           </span>\r\n\r\n\r\n</Card>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Auth\r\n"]},"metadata":{},"sourceType":"module"}